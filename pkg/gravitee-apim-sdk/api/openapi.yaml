openapi: 3.0.1
info:
  title: Gravitee.io - Rest API
  version: 1.22.0
servers:
- url: /
tags:
- name: Alerts
- name: API
- name: Notifications
- name: Plan
- name: Subscription
- name: Metadata
- name: Rating
- name: Application
- name: Audit
- name: Configuration
- name: Entrypoints
- name: Views
- name: View
- name: Group
- name: Sharding Tags
- name: Tenants
- name: Roles
- name: Portal
- name: Top APIs
- name: Plans
- name: Dictionaries
- name: Identity Providers
- name: User
- name: Plugin
- name: Fetcher
- name: Gateway
- name: Messages
- name: Tickets
- name: Policy
- name: Portal entrypoints
- name: Social Authentication
- name: Resource
- name: Service Discovery
- name: OAuth2 Authentication
- name: Search
paths:
  /alerts/metrics:
    get:
      operationId: listMetrics
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AlertMetric'
                type: array
          description: successful operation
      security:
      - gravitee-auth: []
      summary: List alert metrics
      tags:
      - Alerts
  /apis/hooks:
    get:
      operationId: getHooks
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Hook'
                type: array
          description: successful operation
      security:
      - gravitee-auth: []
      summary: Get the list of available hooks
      tags:
      - API
  /apis:
    get:
      description: List all the APIs accessible to the current user or only public
        APIs for non authenticated users.
      operationId: listApis
      parameters:
      - in: query
        name: view
        schema:
          type: string
      - in: query
        name: group
        schema:
          type: string
      - in: query
        name: top
        schema:
          type: boolean
      - in: query
        name: context-path
        schema:
          type: string
      - in: query
        name: owner
        schema:
          type: string
      - in: query
        name: label
        schema:
          type: string
      - in: query
        name: state
        schema:
          type: string
      - in: query
        name: visibility
        schema:
          type: string
      - in: query
        name: version
        schema:
          type: string
      - in: query
        name: name
        schema:
          type: string
      - in: query
        name: tag
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiListItem'
                type: array
          description: List accessible APIs for current user
        "500":
          content: {}
          description: Internal server error
      security:
      - gravitee-auth: []
      summary: List APIs
      tags:
      - API
    post:
      description: User must have API_PUBLISHER or ADMIN role to create an API.
      operationId: createApi
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewApiEntity'
        required: true
      responses:
        "201":
          content: {}
          description: API successfully created
        "500":
          content: {}
          description: Internal server error
      security:
      - gravitee-auth: []
      summary: Create an API
      tags:
      - API
      x-codegen-request-body-name: api
  /apis/import:
    post:
      description: Create an API by importing an existing API definition in JSON format
      operationId: importDefinition
      requestBody:
        content:
          '*/*':
            schema:
              type: string
        required: true
      responses:
        "200":
          content: {}
          description: API successfully created
        "500":
          content: {}
          description: Internal server error
      security:
      - gravitee-auth: []
      summary: Create an API by importing an API definition
      tags:
      - API
      x-codegen-request-body-name: definition
  /apis/import/swagger:
    post:
      operationId: importSwagger
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ImportSwaggerDescriptorEntity'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewApiEntity'
          description: API definition from Swagger descriptor
        "500":
          content: {}
          description: Internal server error
      security:
      - gravitee-auth: []
      summary: Create an API definition from a Swagger descriptor
      tags:
      - API
      x-codegen-request-body-name: swagger
  /apis/_search:
    post:
      operationId: searchApis
      parameters:
      - in: query
        name: q
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiListItem'
                type: array
          description: List accessible APIs for current user
        "500":
          content: {}
          description: Internal server error
      security:
      - gravitee-auth: []
      summary: Search for API using the search engine
      tags:
      - API
  /apis/{api}/headers:
    get:
      operationId: getHeaders
      parameters:
      - in: path
        name: api
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiHeaderEntity'
                type: array
          description: successful operation
      security:
      - gravitee-auth: []
      summary: Get the portal API headers values
      tags:
      - API
  /apis/{api}:
    delete:
      description: User must have the DELETE permission to use this service
      operationId: delete_5
      parameters:
      - in: path
        name: api
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: API successfully deleted
        "500":
          content: {}
          description: Internal server error
      security:
      - gravitee-auth: []
      summary: Delete the API
      tags:
      - API
    get:
      description: User must have the READ permission to use this service
      operationId: get_1
      parameters:
      - in: path
        name: api
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiEntity'
          description: API definition
        "500":
          content: {}
          description: Internal server error
      security:
      - gravitee-auth: []
      summary: Get the API definition
      tags:
      - API
    post:
      description: User must have the MANAGE_LIFECYCLE permission to use this service
      operationId: doLifecycleAction
      parameters:
      - in: query
        name: action
        required: true
        schema:
          enum:
          - START
          - STOP
          type: string
      - in: path
        name: api
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: API's picture
        "500":
          content: {}
          description: Internal server error
      security:
      - gravitee-auth: []
      summary: Manage the API's lifecycle
      tags:
      - API
    put:
      description: User must have the MANAGE_APPLICATION permission to use this service
      operationId: update_5
      parameters:
      - in: path
        name: api
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateApiEntity'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiEntity'
          description: API successfully updated
        "500":
          content: {}
          description: Internal server error
      security:
      - gravitee-auth: []
      summary: Update the API
      tags:
      - API
      x-codegen-request-body-name: api
  /apis/{api}/deploy:
    post:
      description: User must have the MANAGE_LIFECYCLE permission to use this service
      operationId: deployAPI
      parameters:
      - in: path
        name: api
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiEntity'
          description: API successfully deployed
        "500":
          content: {}
          description: Internal server error
      security:
      - gravitee-auth: []
      summary: Deploy API to gateway instances
      tags:
      - API
  /apis/{api}/state:
    get:
      description: User must have the MANAGE_LIFECYCLE permission to use this service
      operationId: isAPISynchronized
      parameters:
      - in: path
        name: api
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiEntity'
          description: API's state
        "500":
          content: {}
          description: Internal server error
      security:
      - gravitee-auth: []
      summary: Get the state of the API
      tags:
      - API
  /apis/{api}/import:
    post:
      description: User must have the MANAGE_APPLICATION permission to use this service
      operationId: updateWithDefinition
      parameters:
      - in: path
        name: api
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              type: string
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiEntity'
          description: API successfully updated from API definition
        "500":
          content: {}
          description: Internal server error
      security:
      - gravitee-auth: []
      summary: Update the API with an existing API definition
      tags:
      - API
      x-codegen-request-body-name: definition
  /apis/{api}/export:
    get:
      description: User must have the MANAGE_APPLICATION permission to use this service
      operationId: exportDefinition
      parameters:
      - in: path
        name: api
        required: true
        schema:
          type: string
      - in: query
        name: version
        schema:
          default: default
          type: string
      - in: query
        name: exclude
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiEntity'
          description: API definition
        "500":
          content: {}
          description: Internal server error
      security:
      - gravitee-auth: []
      summary: Export the API definition in JSON format
      tags:
      - API
  /apis/{api}/picture:
    get:
      description: User must have the READ permission to use this service
      operationId: picture
      parameters:
      - in: path
        name: api
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: API's picture
        "500":
          content: {}
          description: Internal server error
      security:
      - gravitee-auth: []
      summary: Get the API's picture
      tags:
      - API
  /apis/{api}/rollback:
    post:
      description: User must have the MANAGE_LIFECYCLE permission to use this service
      operationId: rollback
      parameters:
      - in: path
        name: api
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/UpdateApiEntity'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiEntity'
          description: API successfully rollbacked
        "500":
          content: {}
          description: Internal server error
      security:
      - gravitee-auth: []
      summary: Rollback API to a previous version
      tags:
      - API
      x-codegen-request-body-name: api
  /apis/{api}/import-path-mappings:
    post:
      description: User must have the MANAGE_APPLICATION permission to use this service
      operationId: importPathMappingsFromPage
      parameters:
      - in: path
        name: api
        required: true
        schema:
          type: string
      - in: query
        name: page
        required: true
        schema:
          type: string
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiEntity'
          description: Path mappings successfully imported
        "500":
          content: {}
          description: Internal server error
      security:
      - gravitee-auth: []
      summary: Import path mappings from a page
      tags:
      - API
  /apis/{api}/notifiers:
    get:
      operationId: getNotifiers
      parameters:
      - in: path
        name: api
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/NotifierEntity'
                type: array
          description: successful operation
      security:
      - gravitee-auth: []
      tags:
      - API
  /apis/{api}/notificationsettings:
    get:
      operationId: get
      parameters:
      - in: path
        name: api
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  properties: {}
                  type: object
                type: array
          description: successful operation
      security:
      - gravitee-auth: []
      summary: Get notification settings
      tags:
      - API
      - Notifications
    post:
      operationId: create
      parameters:
      - in: path
        name: api
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenericNotificationConfigEntity'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: successful operation
      security:
      - gravitee-auth: []
      summary: Create notification settings
      tags:
      - API
      - Notifications
      x-codegen-request-body-name: body
    put:
      operationId: update_1
      parameters:
      - in: path
        name: api
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PortalNotificationConfigEntity'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PortalNotificationConfigEntity'
          description: successful operation
      security:
      - gravitee-auth: []
      summary: Update portal notification settings
      tags:
      - API
      - Notifications
      x-codegen-request-body-name: body
  /apis/{api}/notificationsettings/{notificationId}:
    delete:
      operationId: delete
      parameters:
      - in: path
        name: api
        required: true
        schema:
          type: string
      - in: path
        name: notificationId
        required: true
        schema:
          type: string
      responses:
        default:
          content: {}
          description: successful operation
      security:
      - gravitee-auth: []
      summary: Delete notification settings
      tags:
      - API
      - Notifications
    put:
      operationId: update
      parameters:
      - in: path
        name: api
        required: true
        schema:
          type: string
      - in: path
        name: notificationId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenericNotificationConfigEntity'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericNotificationConfigEntity'
          description: successful operation
      security:
      - gravitee-auth: []
      summary: Update generic notification settings
      tags:
      - API
      - Notifications
      x-codegen-request-body-name: body
  /apis/{api}/quality:
    get:
      operationId: getQualityMetrics
      parameters:
      - in: path
        name: api
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiQualityMetricsEntity'
          description: successful operation
      security:
      - gravitee-auth: []
      summary: Get the quality metrics of the API
      tags:
      - API
  /apis/{api}/keys/{key}:
    delete:
      operationId: revokeApiKey
      parameters:
      - in: path
        name: api
        required: true
        schema:
          type: string
      - in: path
        name: key
        required: true
        schema:
          type: string
      responses:
        default:
          content: {}
          description: successful operation
      security:
      - gravitee-auth: []
      tags:
      - API
    put:
      description: User must have the MANAGE_API_KEYS permission to use this service
      operationId: updateApiKey
      parameters:
      - in: path
        name: api
        required: true
        schema:
          type: string
      - in: path
        name: key
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiKeyEntity'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiKeyEntity'
          description: API Key successfully updated
        "400":
          content: {}
          description: Bad plan format
        "500":
          content: {}
          description: Internal server error
      security:
      - gravitee-auth: []
      summary: Update an API Key
      tags:
      - API
      x-codegen-request-body-name: body
  /apis/{api}/members/transfer_ownership:
    post:
      description: User must have the TRANSFER_OWNERSHIP permission to use this service
      operationId: transferOwnership
      parameters:
      - in: path
        name: api
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/TransferOwnership'
        required: false
      responses:
        "200":
          content: {}
          description: Ownership has been transferred successfully
        "500":
          content: {}
          description: Internal server error
      security:
      - gravitee-auth: []
      summary: Transfer the ownership of the API
      tags:
      - API
      x-codegen-request-body-name: body
  /apis/{api}/members:
    delete:
      description: User must have the MANAGE_MEMBERS permission to use this service
      operationId: deleteApiMember
      parameters:
      - in: path
        name: api
        required: true
        schema:
          type: string
      - in: query
        name: user
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Member has been removed successfully
        "400":
          content: {}
          description: User does not exist
        "500":
          content: {}
          description: Internal server error
      security:
      - gravitee-auth: []
      summary: Remove an API member
      tags:
      - API
    get:
      description: User must have the MANAGE_MEMBERS permission to use this service
      operationId: listApiMembers
      parameters:
      - in: path
        name: api
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/MembershipListItem'
                type: array
          description: List of API's members
        "500":
          content: {}
          description: Internal server error
      security:
      - gravitee-auth: []
      summary: List API members
      tags:
      - API
    post:
      description: User must have the MANAGE_MEMBERS permission to use this service
      operationId: addOrUpdateApiMember
      parameters:
      - in: path
        name: api
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ApiMembership'
        required: false
      responses:
        "201":
          content: {}
          description: Member has been added or updated successfully
        "400":
          content: {}
          description: Membership parameter is not valid
        "500":
          content: {}
          description: Internal server error
      security:
      - gravitee-auth: []
      summary: Add or update an API member
      tags:
      - API
      x-codegen-request-body-name: body
  /apis/{api}/members/permissions:
    get:
      description: User must have the MANAGE_MEMBERS permission to use this service
      operationId: getPermissions
      parameters:
      - in: path
        name: api
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/MemberEntity'
                type: array
          description: API member's permissions
        "500":
          content: {}
          description: Internal server error
      security:
      - gravitee-auth: []
      summary: Get API members
      tags:
      - API
  /apis/{api}/analytics:
    get:
      operationId: hits
      parameters:
      - in: path
        name: api
        required: true
        schema:
          type: string
      - in: query
        name: from
        schema:
          format: int64
          type: integer
      - in: query
        name: to
        schema:
          format: int64
          type: integer
      - in: query
        name: interval
        schema:
          format: int64
          type: integer
      - in: query
        name: query
        schema:
          type: string
      - in: query
        name: key
        schema:
          type: string
      - in: query
        name: field
        schema:
          type: string
      - in: query
        name: size
        schema:
          format: int32
          type: integer
      - in: query
        name: type
        schema:
          type: string
      - in: query
        name: ranges
        schema:
          type: string
      - in: query
        name: order
        schema:
          type: string
      responses:
        default:
          content: {}
          description: successful operation
      security:
      - gravitee-auth: []
      summary: Get API analytics
      tags:
      - API
  /apis/{api}/logs:
    get:
      operationId: apiLogs
      parameters:
      - in: path
        name: api
        required: true
        schema:
          type: string
      - in: query
        name: from
        schema:
          format: int64
          type: integer
      - in: query
        name: to
        schema:
          format: int64
          type: integer
      - in: query
        name: query
        schema:
          type: string
      - in: query
        name: size
        schema:
          default: 20
          format: int32
          type: integer
      - in: query
        name: page
        schema:
          default: 1
          format: int32
          type: integer
      responses:
        "200":
          content: {}
          description: API logs
        "500":
          content: {}
          description: Internal server error
      security:
      - gravitee-auth: []
      summary: Get API logs
      tags:
      - API
  /apis/{api}/logs/{log}:
    get:
      operationId: apiLog
      parameters:
      - in: path
        name: api
        required: true
        schema:
          type: string
      - in: path
        name: log
        required: true
        schema:
          type: string
      - in: query
        name: timestamp
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content: {}
          description: Single log
        "500":
          content: {}
          description: Internal server error
      security:
      - gravitee-auth: []
      summary: Get a specific log
      tags:
      - API
  /apis/{api}/health/average:
    get:
      operationId: healthAverage
      parameters:
      - in: path
        name: api
        required: true
        schema:
          type: string
      - in: query
        name: from
        schema:
          format: int64
          minimum: 0
          type: integer
      - in: query
        name: to
        schema:
          format: int64
          minimum: 0
          type: integer
      - in: query
        name: interval
        schema:
          format: int64
          maximum: 1000000000
          minimum: 1000
          type: integer
      - in: query
        name: type
        required: true
        schema:
          enum:
          - AVAILABILITY
          - RESPONSE_TIME
          type: string
      responses:
        default:
          content: {}
          description: successful operation
      security:
      - gravitee-auth: []
      summary: Health-check average statistics for API
      tags:
      - API
  /apis/{api}/health/logs:
    get:
      operationId: healthcheckLogs
      parameters:
      - in: path
        name: api
        required: true
        schema:
          type: string
      - in: query
        name: query
        schema:
          type: string
      - in: query
        name: size
        schema:
          default: 10
          format: int32
          type: integer
      - in: query
        name: page
        schema:
          default: 1
          format: int32
          type: integer
      - in: query
        name: transition
        schema:
          type: boolean
      responses:
        "200":
          content: {}
          description: API logs
        "500":
          content: {}
          description: Internal server error
      security:
      - gravitee-auth: []
      summary: Health-check logs
      tags:
      - API
  /apis/{api}/health/logs/{log}:
    get:
      operationId: healthcheckLog
      parameters:
      - in: path
        name: api
        required: true
        schema:
          type: string
      - in: path
        name: log
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Single health-check log
        "500":
          content: {}
          description: Internal server error
      security:
      - gravitee-auth: []
      summary: Health-check log
      tags:
      - API
  /apis/{api}/health:
    get:
      operationId: health
      parameters:
      - in: path
        name: api
        required: true
        schema:
          type: string
      - in: query
        name: type
        schema:
          default: availability
          type: string
      - in: query
        name: field
        schema:
          default: endpoint
          type: string
      responses:
        default:
          content: {}
          description: successful operation
      security:
      - gravitee-auth: []
      summary: Health-check statistics for API
      tags:
      - API
  /apis/{api}/pages:
    get:
      description: User must have the READ permission to use this service
      operationId: listPages
      parameters:
      - in: path
        name: api
        required: true
        schema:
          type: string
      - in: query
        name: homepage
        schema:
          type: boolean
      - in: query
        name: type
        schema:
          enum:
          - MARKDOWN
          - RAML
          - SWAGGER
          - FOLDER
          type: string
      - in: query
        name: parent
        schema:
          type: string
      - in: query
        name: name
        schema:
          type: string
      - in: query
        name: root
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PageEntity'
                type: array
          description: List of pages
        "500":
          content: {}
          description: Internal server error
      security:
      - gravitee-auth: []
      summary: List pages
      tags:
      - API
    post:
      description: User must have the MANAGE_PAGES permission to use this service
      operationId: createPage
      parameters:
      - in: path
        name: api
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewPageEntity'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageEntity'
          description: Page successfully created
        "500":
          content: {}
          description: Internal server error
      security:
      - gravitee-auth: []
      summary: Create a page
      tags:
      - API
      x-codegen-request-body-name: page
  /apis/{api}/pages/_fetch:
    post:
      description: User must have the MANAGE_PAGES permission to use this service
      operationId: fetchAllPages
      parameters:
      - in: path
        name: api
        required: true
        schema:
          type: string
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageEntity'
          description: Pages successfully refreshed
        "500":
          content: {}
          description: Internal server error
      security:
      - gravitee-auth: []
      summary: Refresh all pages by calling their associated fetcher
      tags:
      - API
  /apis/{api}/pages/{page}:
    delete:
      description: User must have the MANAGE_PAGES permission to use this service
      operationId: deletePage
      parameters:
      - in: path
        name: api
        required: true
        schema:
          type: string
      - in: path
        name: page
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Page successfully deleted
        "500":
          content: {}
          description: Internal server error
      security:
      - gravitee-auth: []
      summary: Delete a page
      tags:
      - API
    get:
      description: User must have the READ permission to use this service
      operationId: getPage
      parameters:
      - in: path
        name: api
        required: true
        schema:
          type: string
      - in: path
        name: page
        required: true
        schema:
          type: string
      - in: query
        name: portal
        schema:
          type: boolean
      responses:
        "200":
          content: {}
          description: Page
        "500":
          content: {}
          description: Internal server error
      security:
      - gravitee-auth: []
      summary: Get a page
      tags:
      - API
    patch:
      description: User must have the MANAGE_PAGES permission to use this service
      operationId: partialUpdatePage
      parameters:
      - in: path
        name: api
        required: true
        schema:
          type: string
      - in: path
        name: page
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePageEntity'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageEntity'
          description: successful operation
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageEntity'
          description: Page successfully updated
        "500":
          content: {}
          description: Internal server error
      security:
      - gravitee-auth: []
      summary: Update a page
      tags:
      - API
      x-codegen-request-body-name: page
    put:
      description: User must have the MANAGE_PAGES permission to use this service
      operationId: updatePage
      parameters:
      - in: path
        name: api
        required: true
        schema:
          type: string
      - in: path
        name: page
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePageEntity'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageEntity'
          description: successful operation
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageEntity'
          description: Page successfully updated
        "500":
          content: {}
          description: Internal server error
      security:
      - gravitee-auth: []
      summary: Update a page
      tags:
      - API
      x-codegen-request-body-name: page
  /apis/{api}/pages/{page}/_fetch:
    post:
      description: User must have the MANAGE_PAGES permission to use this service
      operationId: fetchPage
      parameters:
      - in: path
        name: api
        required: true
        schema:
          type: string
      - in: path
        name: page
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageEntity'
          description: successful operation
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageEntity'
          description: Page successfully refreshed
        "500":
          content: {}
          description: Internal server error
      security:
      - gravitee-auth: []
      summary: Refresh page by calling the associated fetcher
      tags:
      - API
  /apis/{api}/pages/{page}/content:
    get:
      description: User must have the READ permission to use this service
      operationId: getPageContent
      parameters:
      - in: path
        name: api
        required: true
        schema:
          type: string
      - in: path
        name: page
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Page's content
        "500":
          content: {}
          description: Internal server error
      security:
      - gravitee-auth: []
      summary: Get the page's content
      tags:
      - API
  /apis/{api}/events:
    get:
      description: User must have the MANAGE_LIFECYCLE permission to use this service
      operationId: events
      parameters:
      - in: path
        name: api
        required: true
        schema:
          type: string
      - in: query
        name: type
        schema:
          default: all
          type: string
      responses:
        "200":
          content: {}
          description: API's events
        "500":
          content: {}
          description: Internal server error
      security:
      - gravitee-auth: []
      summary: Get API's events
      tags:
      - API
  /apis/{api}/plans/{plan}:
    delete:
      description: User must have the MANAGE_PLANS permission to use this service
      operationId: deletePlan
      parameters:
      - in: path
        name: api
        required: true
        schema:
          type: string
      - in: path
        name: plan
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Plan successfully deleted
        "500":
          content: {}
          description: Internal server error
      security:
      - gravitee-auth: []
      summary: Delete a plan
      tags:
      - API
      - Plan
    get:
      description: User must have the READ permission to use this service
      operationId: getPlan
      parameters:
      - in: path
        name: api
        required: true
        schema:
          type: string
      - in: path
        name: plan
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlanEntity'
          description: Plan information
        "500":
          content: {}
          description: Internal server error
      security:
      - gravitee-auth: []
      summary: Get a plan
      tags:
      - API
      - Plan
    put:
      description: User must have the MANAGE_PLANS permission to use this service
      operationId: updatePlan
      parameters:
      - in: path
        name: api
        required: true
        schema:
          type: string
      - in: path
        name: plan
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePlanEntity'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlanEntity'
          description: Plan successfully updated
        "400":
          content: {}
          description: Bad plan format
        "500":
          content: {}
          description: Internal server error
      security:
      - gravitee-auth: []
      summary: Update a plan
      tags:
      - API
      - Plan
      x-codegen-request-body-name: plan
  /apis/{api}/plans:
    get:
      description: List all the plans accessible to the current user.
      operationId: listPlans
      parameters:
      - in: path
        name: api
        required: true
        schema:
          type: string
      - in: query
        name: status
        schema:
          default: published
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PlanEntity'
                type: array
                uniqueItems: true
          description: List accessible plans for current user
        "500":
          content: {}
          description: Internal server error
      security:
      - gravitee-auth: []
      summary: List plans for an API
      tags:
      - API
      - Plan
    post:
      description: User must have the MANAGE_PLANS permission to use this service
      operationId: createPlan
      parameters:
      - in: path
        name: api
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewPlanEntity'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlanEntity'
          description: Plan successfully created
        "500":
          content: {}
          description: Internal server error
      security:
      - gravitee-auth: []
      summary: Create a plan
      tags:
      - API
      - Plan
      x-codegen-request-body-name: plan
  /apis/{api}/plans/{plan}/_close:
    post:
      description: User must have the MANAGE_PLANS permission to use this service
      operationId: closePlan
      parameters:
      - in: path
        name: api
        required: true
        schema:
          type: string
      - in: path
        name: plan
        required: true
        schema:
          type: string
      responses:
        "204":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlanEntity'
          description: Plan successfully closed
        "500":
          content: {}
          description: Internal server error
      security:
      - gravitee-auth: []
      summary: Close  a plan
      tags:
      - API
      - Plan
  /apis/{api}/plans/{plan}/_publish:
    post:
      description: User must have the MANAGE_PLANS permission to use this service
      operationId: publishPlan
      parameters:
      - in: path
        name: api
        required: true
        schema:
          type: string
      - in: path
        name: plan
        required: true
        schema:
          type: string
      responses:
        "204":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlanEntity'
          description: Plan successfully published
        "500":
          content: {}
          description: Internal server error
      security:
      - gravitee-auth: []
      summary: Publicly publish plan
      tags:
      - API
      - Plan
  /apis/{api}/plans/{plan}/_depreciate:
    post:
      description: User must have the API_PLAN[UPDATE] permission to use this service
      operationId: depreciatePlan
      parameters:
      - in: path
        name: api
        required: true
        schema:
          type: string
      - in: path
        name: plan
        required: true
        schema:
          type: string
      responses:
        "204":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlanEntity'
          description: Plan successfully depreciated
        "500":
          content: {}
          description: Internal server error
      security:
      - gravitee-auth: []
      summary: Depreciate a plan
      tags:
      - API
      - Plan
  /apis/{api}/subscriptions:
    get:
      description: User must have the READ_SUBSCRIPTION permission to use this service
      operationId: listApiSubscriptions
      parameters:
      - in: path
        name: api
        required: true
        schema:
          type: string
      - description: plan
        in: query
        name: plan
        required: true
        schema:
          type: string
      - description: application
        in: query
        name: application
        required: true
        schema:
          type: string
      - in: query
        name: status
        schema:
          default: accepted,pending,paused
          type: string
      - in: query
        name: size
        schema:
          default: 20
          format: int32
          maximum: 100
          minimum: 1
          type: integer
      - in: query
        name: page
        schema:
          default: 1
          format: int32
          minimum: 1
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResult'
          description: Paged result of API's subscriptions
        "500":
          content: {}
          description: Internal server error
      security:
      - gravitee-auth: []
      summary: List subscriptions for the API
      tags:
      - API
      - Subscription
    post:
      description: User must have the MANAGE_SUBSCRIPTIONS permission to use this
        service
      operationId: createSubscription
      parameters:
      - in: path
        name: api
        required: true
        schema:
          type: string
      - in: query
        name: application
        required: true
        schema:
          type: string
      - in: query
        name: plan
        required: true
        schema:
          type: string
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
          description: Subscription successfully created
        "500":
          content: {}
          description: Internal server error
      security:
      - gravitee-auth: []
      summary: Subscribe to a plan
      tags:
      - API
      - Subscription
  /apis/{api}/subscriptions/{subscription}:
    get:
      description: User must have the MANAGE_PLANS permission to use this service
      operationId: getApiSubscription
      parameters:
      - in: path
        name: api
        required: true
        schema:
          type: string
      - in: path
        name: subscription
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
          description: Get a subscription
        "404":
          content: {}
          description: Subscription does not exist
        "500":
          content: {}
          description: Internal server error
      security:
      - gravitee-auth: []
      summary: Get a subscription
      tags:
      - API
      - Subscription
    post:
      description: User must have the MANAGE_API_KEYS permission to use this service
      operationId: renewApiKey
      parameters:
      - in: path
        name: api
        required: true
        schema:
          type: string
      - in: path
        name: subscription
        required: true
        schema:
          type: string
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiKeyEntity'
          description: A new API Key
        "500":
          content: {}
          description: Internal server error
      security:
      - gravitee-auth: []
      summary: Renew an API key
      tags:
      - API
      - Subscription
    put:
      description: User must have the MANAGE_PLANS permission to use this service
      operationId: updateApiSubscription
      parameters:
      - in: path
        name: api
        required: true
        schema:
          type: string
      - in: path
        name: subscription
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSubscriptionEntity'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
          description: Update a subscription
        "400":
          content: {}
          description: Bad subscription format
        "500":
          content: {}
          description: Internal server error
      security:
      - gravitee-auth: []
      summary: Update a subscription
      tags:
      - API
      - Subscription
      x-codegen-request-body-name: subscription
  /apis/{api}/subscriptions/{subscription}/_process:
    post:
      description: User must have the MANAGE_PLANS permission to use this service
      operationId: processApiSubscription
      parameters:
      - in: path
        name: api
        required: true
        schema:
          type: string
      - in: path
        name: subscription
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ProcessSubscriptionEntity'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
          description: Update a subscription
        "400":
          content: {}
          description: Bad subscription format
        "500":
          content: {}
          description: Internal server error
      security:
      - gravitee-auth: []
      summary: Update a subscription
      tags:
      - API
      - Subscription
      x-codegen-request-body-name: subscription
  /apis/{api}/subscriptions/{subscription}/status:
    post:
      description: User must have the MANAGE_PLANS permission to use this service
      operationId: changeSubscriptionStatus
      parameters:
      - in: path
        name: api
        required: true
        schema:
          type: string
      - in: path
        name: subscription
        required: true
        schema:
          type: string
      - in: query
        name: status
        required: true
        schema:
          enum:
          - CLOSED
          - PAUSED
          - RESUMED
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
          description: Subscription status successfully updated
        "400":
          content: {}
          description: Status changes not authorized
        "404":
          content: {}
          description: API subscription does not exist
        "500":
          content: {}
          description: Internal server error
      security:
      - gravitee-auth: []
      summary: Change the status of a subscription
      tags:
      - API
      - Subscription
  /apis/{api}/subscriptions/{subscription}/keys:
    get:
      description: User must have the MANAGE_API_KEYS permission to use this service
      operationId: listApiKeysForSubscription
      parameters:
      - in: path
        name: subscription
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiKeyEntity'
                type: array
          description: List of API Keys for a subscription
        "500":
          content: {}
          description: Internal server error
      security:
      - gravitee-auth: []
      summary: List all API Keys for a subscription
      tags:
      - API
      - Subscription
  /apis/{api}/subscriptions/{subscription}/keys/{key}:
    delete:
      description: User must have the MANAGE_API_KEYS permission to use this service
      operationId: revokeApiKey_1
      parameters:
      - in: path
        name: api
        required: true
        schema:
          type: string
      - in: path
        name: subscription
        required: true
        schema:
          type: string
      - in: path
        name: key
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: API key successfully revoked
        "400":
          content: {}
          description: API Key does not correspond to the subscription
        "500":
          content: {}
          description: Internal server error
      security:
      - gravitee-auth: []
      summary: Revoke an API key
      tags:
      - API
      - Subscription
  /apis/{api}/subscribers:
    get:
      description: User must have the MANAGE_SUBSCRIPTIONS permission to use this
        service
      operationId: listApiSubscribers
      parameters:
      - in: path
        name: api
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApplicationEntity'
                type: array
          description: Paged result of API subscribers
        "500":
          content: {}
          description: Internal server error
      security:
      - gravitee-auth: []
      summary: List subscribers for the API
      tags:
      - API
      - Subscription
  /apis/{api}/metadata/{metadata}:
    delete:
      description: User must have the MANAGE_API permission to use this service
      operationId: delete_1
      parameters:
      - in: path
        name: api
        required: true
        schema:
          type: string
      - in: path
        name: metadata
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Metadata successfully deleted
        "500":
          content: {}
          description: Internal server error
      security:
      - gravitee-auth: []
      summary: Delete a metadata
      tags:
      - API
      - Metadata
    get:
      description: User must have the MANAGE_API permission to use this service
      operationId: getApiMetadata
      parameters:
      - in: path
        name: api
        required: true
        schema:
          type: string
      - in: path
        name: metadata
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiMetadataEntity'
          description: A metadata
        "404":
          content: {}
          description: Metadata not found
        "500":
          content: {}
          description: Internal server error
      security:
      - gravitee-auth: []
      summary: A metadata for the given API and metadata id
      tags:
      - API
      - Metadata
    put:
      description: User must have the MANAGE_API permission to use this service
      operationId: update_2
      parameters:
      - in: path
        name: api
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateApiMetadataEntity'
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiMetadataEntity'
          description: API metadata
        "500":
          content: {}
          description: Internal server error
      security:
      - gravitee-auth: []
      summary: Update an API metadata
      tags:
      - API
      - Metadata
      x-codegen-request-body-name: body
  /apis/{api}/metadata:
    get:
      description: User must have the MANAGE_API permission to use this service
      operationId: listApiMetadatas
      parameters:
      - in: path
        name: api
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiMetadataEntity'
                type: array
          description: List of metadata
        "500":
          content: {}
          description: Internal server error
      security:
      - gravitee-auth: []
      summary: List metadata for the given API
      tags:
      - API
      - Metadata
    post:
      description: User must have the MANAGE_API permission to use this service
      operationId: create_1
      parameters:
      - in: path
        name: api
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewApiMetadataEntity'
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiMetadataEntity'
          description: A new API metadata
        "500":
          content: {}
          description: Internal server error
      security:
      - gravitee-auth: []
      summary: Create an API metadata
      tags:
      - API
      - Metadata
      x-codegen-request-body-name: body
  /apis/{api}/ratings/{rating}/answers:
    post:
      operationId: createAnswer
      parameters:
      - in: path
        name: api
        required: true
        schema:
          type: string
      - in: path
        name: rating
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewRatingAnswerEntity'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RatingEntity'
          description: successful operation
      security:
      - gravitee-auth: []
      tags:
      - API
      - Rating
      x-codegen-request-body-name: body
  /apis/{api}/ratings/current:
    get:
      operationId: getByApiAndUser
      parameters:
      - in: path
        name: api
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RatingEntity'
          description: successful operation
      security:
      - gravitee-auth: []
      tags:
      - API
      - Rating
  /apis/{api}/ratings/summary:
    get:
      operationId: getSummaryByApi
      parameters:
      - in: path
        name: api
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RatingSummaryEntity'
          description: successful operation
      security:
      - gravitee-auth: []
      tags:
      - API
      - Rating
  /apis/{api}/ratings/{rating}:
    delete:
      operationId: delete_2
      parameters:
      - in: path
        name: rating
        required: true
        schema:
          type: string
      responses:
        default:
          content: {}
          description: successful operation
      security:
      - gravitee-auth: []
      tags:
      - API
      - Rating
    put:
      operationId: update_3
      parameters:
      - in: path
        name: api
        required: true
        schema:
          type: string
      - in: path
        name: rating
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateRatingEntity'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RatingEntity'
          description: successful operation
      security:
      - gravitee-auth: []
      tags:
      - API
      - Rating
      x-codegen-request-body-name: body
  /apis/{api}/ratings:
    get:
      operationId: list
      parameters:
      - in: path
        name: api
        required: true
        schema:
          type: string
      - in: query
        name: pageNumber
        schema:
          format: int32
          minimum: 1
          type: integer
      - in: query
        name: pageSize
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageRatingEntity'
          description: successful operation
      security:
      - gravitee-auth: []
      tags:
      - API
      - Rating
    post:
      operationId: create_2
      parameters:
      - in: path
        name: api
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewRatingEntity'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RatingEntity'
          description: successful operation
      security:
      - gravitee-auth: []
      tags:
      - API
      - Rating
      x-codegen-request-body-name: body
  /apis/{api}/ratings/{rating}/answers/{answer}:
    delete:
      operationId: delete_3
      parameters:
      - in: path
        name: rating
        required: true
        schema:
          type: string
      - in: path
        name: answer
        required: true
        schema:
          type: string
      responses:
        default:
          content: {}
          description: successful operation
      security:
      - gravitee-auth: []
      tags:
      - API
      - Rating
  /apis/{api}/audit/events:
    get:
      operationId: getEvents
      responses:
        default:
          content: {}
          description: successful operation
      security:
      - gravitee-auth: []
      tags:
      - API
  /apis/{api}/audit:
    get:
      operationId: list_1
      parameters:
      - in: path
        name: api
        required: true
        schema:
          type: string
      - in: query
        name: mgmt
        schema:
          type: boolean
      - in: query
        name: api
        schema:
          type: string
      - in: query
        name: application
        schema:
          type: string
      - in: query
        name: event
        schema:
          type: string
      - in: query
        name: from
        schema:
          format: int64
          type: integer
      - in: query
        name: to
        schema:
          format: int64
          type: integer
      - in: query
        name: size
        schema:
          default: 20
          format: int32
          type: integer
      - in: query
        name: page
        schema:
          default: 1
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetadataPageAuditEntity'
          description: successful operation
      security:
      - gravitee-auth: []
      tags:
      - API
  /apis/{api}/alerts/{alert}:
    delete:
      operationId: delete_4
      parameters:
      - in: path
        name: api
        required: true
        schema:
          type: string
      - in: path
        name: alert
        required: true
        schema:
          type: string
      responses:
        default:
          content: {}
          description: successful operation
      security:
      - gravitee-auth: []
      tags:
      - API
      - Alerts
    put:
      operationId: update_4
      parameters:
      - in: path
        name: api
        required: true
        schema:
          type: string
      - in: path
        name: alert
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAlertEntity'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlertEntity'
          description: successful operation
      security:
      - gravitee-auth: []
      tags:
      - API
      - Alerts
      x-codegen-request-body-name: body
  /apis/{api}/alerts:
    get:
      operationId: list_2
      parameters:
      - in: path
        name: api
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AlertEntity'
                type: array
          description: successful operation
      security:
      - gravitee-auth: []
      summary: List configured alerts of a given API
      tags:
      - API
      - Alerts
    post:
      operationId: create_3
      parameters:
      - in: path
        name: api
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewAlertEntity'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlertEntity'
          description: successful operation
      security:
      - gravitee-auth: []
      tags:
      - API
      - Alerts
      x-codegen-request-body-name: body
  /apis/{api}/messages:
    post:
      operationId: create_4
      parameters:
      - in: path
        name: api
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MessageEntity'
        required: false
      responses:
        default:
          content: {}
          description: successful operation
      security:
      - gravitee-auth: []
      tags:
      - API
      x-codegen-request-body-name: body
  /apis/{api}/media/{hash}:
    get:
      operationId: getImage
      parameters:
      - in: path
        name: api
        required: true
        schema:
          type: string
      - in: path
        name: hash
        required: true
        schema:
          type: string
      responses:
        default:
          content: {}
          description: successful operation
      security:
      - gravitee-auth: []
      tags:
      - API
  /apis/{api}/media/upload:
    post:
      description: User must have the API_DOCUMENTATION permission to use this service
      operationId: uploadImage
      parameters:
      - in: path
        name: api
        required: true
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                file:
                  format: binary
                  type: string
      responses:
        "201":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/PageEntity'
          description: Page successfully created
        "500":
          content: {}
          description: Internal server error
      security:
      - gravitee-auth: []
      summary: Create a picture for an API
      tags:
      - API
  /apis/verify:
    post:
      operationId: verify
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyApiParam'
        required: false
      responses:
        "200":
          content: {}
          description: No API match the following criteria
        "400":
          content: {}
          description: API already exist with the following criteria
      security:
      - gravitee-auth: []
      summary: Check if an API match the following criteria
      tags:
      - API
      x-codegen-request-body-name: body
  /applications/hooks:
    get:
      operationId: getHooks_1
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Hook'
                type: array
          description: successful operation
      security:
      - gravitee-auth: []
      summary: Get the list of available hooks
      tags:
      - Application
  /applications:
    get:
      operationId: listApplications
      parameters:
      - in: query
        name: group
        schema:
          type: string
      - in: query
        name: query
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApplicationEntity'
                type: array
          description: User's applications
        "500":
          content: {}
          description: Internal server error
      security:
      - gravitee-auth: []
      summary: List all the applications accessible to authenticated user
      tags:
      - Application
    post:
      description: User must have API_CONSUMER or ADMIN role to create an application.
      operationId: createApplication
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewApplicationEntity'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationEntity'
          description: Application successfully created
        "500":
          content: {}
          description: Internal server error
      security:
      - gravitee-auth: []
      summary: Create an application
      tags:
      - Application
      x-codegen-request-body-name: application
  /applications/{application}:
    delete:
      description: User must have the DELETE permission to use this service
      operationId: deleteApplication
      parameters:
      - in: path
        name: application
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Application successfully deleted
        "500":
          content: {}
          description: Internal server error
      security:
      - gravitee-auth: []
      summary: Delete an application
      tags:
      - Application
    get:
      description: User must have the READ permission to use this service
      operationId: getApplication
      parameters:
      - in: path
        name: application
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationEntity'
          description: Application
        "500":
          content: {}
          description: Internal server error
      security:
      - gravitee-auth: []
      summary: Get an application
      tags:
      - Application
    put:
      description: User must have the MANAGE_APPLICATION permission to use this service
      operationId: updateApplication
      parameters:
      - in: path
        name: application
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateApplicationEntity'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationEntity'
          description: Updated application
        "500":
          content: {}
          description: Internal server error
      security:
      - gravitee-auth: []
      summary: Update an application
      tags:
      - Application
      x-codegen-request-body-name: body
  /applications/{application}/members/transfer_ownership:
    post:
      description: User must have the TRANSFER_OWNERSHIP permission to use this service
      operationId: transferOwnership_1
      parameters:
      - in: path
        name: application
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/TransferOwnership'
        required: false
      responses:
        "200":
          content: {}
          description: Ownership has been transferred successfully
        "500":
          content: {}
          description: Internal server error
      security:
      - gravitee-auth: []
      summary: Transfer the ownership of the APPLICATION
      tags:
      - Application
      x-codegen-request-body-name: body
  /applications/{application}/members:
    delete:
      description: User must have the MANAGE_MEMBERS permission to use this service
      operationId: deleteApplicationMember
      parameters:
      - in: path
        name: application
        required: true
        schema:
          type: string
      - in: query
        name: user
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Member has been removed successfully
        "400":
          content: {}
          description: User does not exist
        "500":
          content: {}
          description: Internal server error
      security:
      - gravitee-auth: []
      summary: Remove an application member
      tags:
      - Application
    get:
      description: User must have the READ permission to use this service
      operationId: listApplicationMembers
      parameters:
      - in: path
        name: application
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/MembershipListItem'
                type: array
          description: Application successfully deleted
        "500":
          content: {}
          description: Internal server error
      security:
      - gravitee-auth: []
      summary: List application members
      tags:
      - Application
    post:
      description: User must have the MANAGE_MEMBERS permission to use this service
      operationId: addOrUpdateApplicationMember
      parameters:
      - in: path
        name: application
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ApplicationMembership'
        required: false
      responses:
        "201":
          content: {}
          description: Member has been added or updated successfully
        "400":
          content: {}
          description: Membership parameter is not valid
        "500":
          content: {}
          description: Internal server error
      security:
      - gravitee-auth: []
      summary: Add or update an application member
      tags:
      - Application
      x-codegen-request-body-name: body
  /applications/{application}/members/permissions:
    get:
      description: User must have the APPLICATION_MEMBER permission to use this service
      operationId: getPermissions_1
      parameters:
      - in: path
        name: application
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/MemberEntity'
                type: array
          description: Application member's permissions
        "500":
          content: {}
          description: Internal server error
      security:
      - gravitee-auth: []
      summary: Get application members
      tags:
      - Application
  /applications/{application}/subscriptions/{subscription}/keys:
    get:
      description: User must have the READ permission to use this service
      operationId: listApiKeysForSubscription_1
      parameters:
      - in: path
        name: subscription
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiKeyEntity'
                type: array
                uniqueItems: true
          description: List of API Keys for a subscription
        "500":
          content: {}
          description: Internal server error
      security:
      - gravitee-auth: []
      summary: List all API Keys for a subscription
      tags:
      - Application
      - Subscription
  /applications/{application}/subscriptions/{subscription}:
    delete:
      description: User must have the APPLICATION_SUBSCRIPTION[DELETE] permission
        to use this service
      operationId: closeSubscription
      parameters:
      - in: path
        name: application
        required: true
        schema:
          type: string
      - in: path
        name: subscription
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
          description: Subscription has been closed successfully
        "500":
          content: {}
          description: Internal server error
      security:
      - gravitee-auth: []
      summary: Close the subscription
      tags:
      - Application
      - Subscription
    get:
      description: User must have the READ permission to use this service
      operationId: getSubscription
      parameters:
      - in: path
        name: subscription
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
          description: Subscription information
        "500":
          content: {}
          description: Internal server error
      security:
      - gravitee-auth: []
      summary: Get subscription information
      tags:
      - Application
      - Subscription
    post:
      description: User must have the MANAGE_API_KEYS permission to use this service
      operationId: renewApiKey_1
      parameters:
      - in: path
        name: application
        required: true
        schema:
          type: string
      - in: path
        name: subscription
        required: true
        schema:
          type: string
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiKeyEntity'
          description: A new API Key
        "500":
          content: {}
          description: Internal server error
      security:
      - gravitee-auth: []
      summary: Renew an API key
      tags:
      - Application
      - Subscription
  /applications/{application}/subscriptions/{subscription}/keys/{key}:
    delete:
      description: User must have the MANAGE_API_KEYS permission to use this service
      operationId: revokeApiKey_2
      parameters:
      - in: path
        name: application
        required: true
        schema:
          type: string
      - in: path
        name: subscription
        required: true
        schema:
          type: string
      - in: path
        name: key
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: API key successfully revoked
        "400":
          content: {}
          description: API Key does not correspond to the subscription
        "500":
          content: {}
          description: Internal server error
      security:
      - gravitee-auth: []
      summary: Revoke an API key
      tags:
      - Application
      - Subscription
  /applications/{application}/subscriptions:
    get:
      description: User must have the READ_SUBSCRIPTION permission to use this service
      operationId: listApplicationSubscriptions
      parameters:
      - in: path
        name: application
        required: true
        schema:
          type: string
      - description: plan
        in: query
        name: plan
        required: true
        schema:
          type: string
      - description: api
        in: query
        name: api
        required: true
        schema:
          type: string
      - in: query
        name: status
        schema:
          default: accepted,pending,paused
          type: string
      - in: query
        name: size
        schema:
          default: 20
          format: int32
          maximum: 100
          minimum: 1
          type: integer
      - in: query
        name: page
        schema:
          default: 1
          format: int32
          minimum: 1
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResult'
          description: Paged result of application's subscriptions
        "500":
          content: {}
          description: Internal server error
      security:
      - gravitee-auth: []
      summary: List subscriptions for the application
      tags:
      - Application
      - Subscription
    post:
      description: User must have the MANAGE_SUBSCRIPTIONS permission to use this
        service
      operationId: createSubscription_1
      parameters:
      - in: path
        name: application
        required: true
        schema:
          type: string
      - in: query
        name: plan
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/NewSubscriptionEntity'
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
          description: Subscription successfully created
        "500":
          content: {}
          description: Internal server error
      security:
      - gravitee-auth: []
      summary: Subscribe to a plan
      tags:
      - Application
      - Subscription
      x-codegen-request-body-name: body
  /applications/{application}/subscribed:
    get:
      description: User must have the APPLICATION_SUBSCRIPTION permission to use this
        service
      operationId: listApiSubscribed
      parameters:
      - in: path
        name: application
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApplicationEntity'
                type: array
          description: Paged result of subscribed APIs
        "500":
          content: {}
          description: Internal server error
      security:
      - gravitee-auth: []
      summary: List APIs subscribed by the application
      tags:
      - Application
      - Subscription
  /applications/{application}/notifiers:
    get:
      operationId: getNotifiers_1
      parameters:
      - in: path
        name: application
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/NotifierEntity'
                type: array
          description: successful operation
      security:
      - gravitee-auth: []
      tags:
      - Application
  /applications/{application}/notificationsettings:
    get:
      operationId: get_2
      parameters:
      - in: path
        name: application
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  properties: {}
                  type: object
                type: array
          description: successful operation
      security:
      - gravitee-auth: []
      summary: Get notification settings
      tags:
      - Application
      - Notifications
    post:
      operationId: create_5
      parameters:
      - in: path
        name: application
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenericNotificationConfigEntity'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: successful operation
      security:
      - gravitee-auth: []
      summary: Create notification settings
      tags:
      - Application
      - Notifications
      x-codegen-request-body-name: body
    put:
      operationId: update_7
      parameters:
      - in: path
        name: application
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PortalNotificationConfigEntity'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PortalNotificationConfigEntity'
          description: successful operation
      security:
      - gravitee-auth: []
      summary: Update portal notification settings
      tags:
      - Application
      - Notifications
      x-codegen-request-body-name: body
  /applications/{application}/notificationsettings/{notificationId}:
    delete:
      operationId: delete_6
      parameters:
      - in: path
        name: application
        required: true
        schema:
          type: string
      - in: path
        name: notificationId
        required: true
        schema:
          type: string
      responses:
        default:
          content: {}
          description: successful operation
      security:
      - gravitee-auth: []
      summary: Delete notification settings
      tags:
      - Application
      - Notifications
    put:
      operationId: update_6
      parameters:
      - in: path
        name: application
        required: true
        schema:
          type: string
      - in: path
        name: notificationId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenericNotificationConfigEntity'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericNotificationConfigEntity'
          description: successful operation
      security:
      - gravitee-auth: []
      summary: Update generic notification settings
      tags:
      - Application
      - Notifications
      x-codegen-request-body-name: body
  /applications/{application}/analytics:
    get:
      operationId: hits_1
      parameters:
      - in: path
        name: application
        required: true
        schema:
          type: string
      - in: query
        name: from
        schema:
          format: int64
          type: integer
      - in: query
        name: to
        schema:
          format: int64
          type: integer
      - in: query
        name: interval
        schema:
          format: int64
          type: integer
      - in: query
        name: query
        schema:
          type: string
      - in: query
        name: key
        schema:
          type: string
      - in: query
        name: field
        schema:
          type: string
      - in: query
        name: size
        schema:
          format: int32
          type: integer
      - in: query
        name: type
        schema:
          type: string
      - in: query
        name: ranges
        schema:
          type: string
      - in: query
        name: order
        schema:
          type: string
      responses:
        default:
          content: {}
          description: successful operation
      security:
      - gravitee-auth: []
      summary: Get Application analytics
      tags:
      - Application
  /applications/{application}/logs:
    get:
      operationId: applicationLogs
      parameters:
      - in: path
        name: application
        required: true
        schema:
          type: string
      - in: query
        name: from
        schema:
          format: int64
          type: integer
      - in: query
        name: to
        schema:
          format: int64
          type: integer
      - in: query
        name: query
        schema:
          type: string
      - in: query
        name: size
        schema:
          default: 20
          format: int32
          type: integer
      - in: query
        name: page
        schema:
          default: 1
          format: int32
          type: integer
      responses:
        "200":
          content: {}
          description: Application logs
        "500":
          content: {}
          description: Internal server error
      security:
      - gravitee-auth: []
      summary: Get application logs
      tags:
      - Application
  /applications/{application}/logs/{log}:
    get:
      operationId: applicationLog
      parameters:
      - in: path
        name: application
        required: true
        schema:
          type: string
      - in: path
        name: log
        required: true
        schema:
          type: string
      - in: query
        name: timestamp
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content: {}
          description: Single log
        "500":
          content: {}
          description: Internal server error
      security:
      - gravitee-auth: []
      summary: Get a specific log
      tags:
      - Application
  /applications/{application}/alerts/{alert}:
    delete:
      operationId: delete_7
      parameters:
      - in: path
        name: application
        required: true
        schema:
          type: string
      - in: path
        name: alert
        required: true
        schema:
          type: string
      responses:
        default:
          content: {}
          description: successful operation
      security:
      - gravitee-auth: []
      tags:
      - Application
      - Alerts
    put:
      operationId: update_8
      parameters:
      - in: path
        name: application
        required: true
        schema:
          type: string
      - in: path
        name: alert
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAlertEntity'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlertEntity'
          description: successful operation
      security:
      - gravitee-auth: []
      tags:
      - Application
      - Alerts
      x-codegen-request-body-name: body
  /applications/{application}/alerts:
    get:
      operationId: list_3
      parameters:
      - in: path
        name: application
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AlertEntity'
                type: array
          description: successful operation
      security:
      - gravitee-auth: []
      summary: List configured alerts of a given APPLICATION
      tags:
      - Application
      - Alerts
    post:
      operationId: create_6
      parameters:
      - in: path
        name: application
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewAlertEntity'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlertEntity'
          description: successful operation
      security:
      - gravitee-auth: []
      tags:
      - Application
      - Alerts
      x-codegen-request-body-name: body
  /audit/events:
    get:
      operationId: getEvents_1
      responses:
        default:
          content: {}
          description: successful operation
      security:
      - gravitee-auth: []
      tags:
      - Audit
  /audit:
    get:
      operationId: list_4
      parameters:
      - in: query
        name: mgmt
        schema:
          type: boolean
      - in: query
        name: api
        schema:
          type: string
      - in: query
        name: application
        schema:
          type: string
      - in: query
        name: event
        schema:
          type: string
      - in: query
        name: from
        schema:
          format: int64
          type: integer
      - in: query
        name: to
        schema:
          format: int64
          type: integer
      - in: query
        name: size
        schema:
          default: 20
          format: int32
          type: integer
      - in: query
        name: page
        schema:
          default: 1
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetadataPageAuditEntity'
          description: successful operation
      security:
      - gravitee-auth: []
      tags:
      - Audit
  /configuration/hooks:
    get:
      operationId: getHooks_2
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Hook'
                type: array
          description: successful operation
      security:
      - gravitee-auth: []
      summary: Get the list of available hooks
      tags:
      - Configuration
  /configuration/entrypoints/{entrypointId}:
    get:
      operationId: get_3
      parameters:
      - in: path
        name: entrypointId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntrypointEntity'
          description: successful operation
      security:
      - gravitee-auth: []
      tags:
      - Entrypoints
      - Configuration
  /configuration/entrypoints:
    get:
      operationId: list_5
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/EntrypointEntity'
                type: array
          description: successful operation
      security:
      - gravitee-auth: []
      tags:
      - Entrypoints
      - Configuration
    post:
      operationId: create_7
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewEntryPointEntity'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntrypointEntity'
          description: successful operation
      security:
      - gravitee-auth: []
      tags:
      - Entrypoints
      - Configuration
      x-codegen-request-body-name: body
    put:
      operationId: update_9
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateEntryPointEntity'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntrypointEntity'
          description: successful operation
      security:
      - gravitee-auth: []
      tags:
      - Entrypoints
      - Configuration
      x-codegen-request-body-name: body
  /configuration/entrypoints/{entrypoint}:
    delete:
      operationId: delete_8
      parameters:
      - in: path
        name: entrypoint
        required: true
        schema:
          type: string
      responses:
        default:
          content: {}
          description: successful operation
      security:
      - gravitee-auth: []
      tags:
      - Entrypoints
      - Configuration
  /configuration/notifiers:
    get:
      operationId: getNotifiers_2
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/NotifierEntity'
                type: array
          description: successful operation
      security:
      - gravitee-auth: []
      tags:
      - Configuration
  /configuration/views/{id}:
    delete:
      operationId: delete_9
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        default:
          content: {}
          description: successful operation
      security:
      - gravitee-auth: []
      tags:
      - View
      - Views
      - Configuration
    get:
      operationId: get_4
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ViewEntity'
          description: successful operation
      security:
      - gravitee-auth: []
      tags:
      - View
      - Views
      - Configuration
    put:
      operationId: update_10
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateViewEntity'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ViewEntity'
          description: successful operation
      security:
      - gravitee-auth: []
      tags:
      - View
      - Views
      - Configuration
      x-codegen-request-body-name: body
  /configuration/views:
    get:
      operationId: list_6
      parameters:
      - in: query
        name: all
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ViewEntity'
                type: array
          description: successful operation
      security:
      - gravitee-auth: []
      tags:
      - Views
      - Configuration
    post:
      operationId: create_8
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewViewEntity'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ViewEntity'
          description: successful operation
      security:
      - gravitee-auth: []
      tags:
      - Views
      - Configuration
      x-codegen-request-body-name: body
    put:
      operationId: update_11
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/UpdateViewEntity'
              type: array
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ViewEntity'
                type: array
          description: successful operation
      security:
      - gravitee-auth: []
      tags:
      - Views
      - Configuration
      x-codegen-request-body-name: body
  /configuration/views/default:
    get:
      operationId: getDefault
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ViewEntity'
          description: successful operation
      security:
      - gravitee-auth: []
      tags:
      - Views
      - Configuration
  /configuration/groups:
    get:
      description: Find all groups, or a specific type of groups.Only administrators
        could see all groups.Only users with MANAGE_API permissions could see API
        groups.
      operationId: findAll
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/GroupEntity'
                type: array
          description: List of groups
        "500":
          content: {}
          description: Internal server error
      security:
      - gravitee-auth: []
      summary: Find groups
      tags:
      - Group
      - Configuration
    post:
      description: Create a new group.
      operationId: createGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewGroupEntity'
        required: true
      responses:
        "201":
          content: {}
          description: Group successfully created
        "500":
          content: {}
          description: Internal Server Error
      security:
      - gravitee-auth: []
      summary: Create group
      tags:
      - Group
      - Configuration
      x-codegen-request-body-name: group
  /configuration/groups/{group}/memberships:
    get:
      operationId: getMemberships
      parameters:
      - in: path
        name: group
        required: true
        schema:
          type: string
      - in: query
        name: type
        schema:
          type: string
      responses:
        default:
          content: {}
          description: successful operation
      security:
      - gravitee-auth: []
      summary: get apis or applications linked to this group
      tags:
      - Group
      - Configuration
  /configuration/groups/{group}/members:
    get:
      operationId: getMembers
      parameters:
      - in: path
        name: group
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/MemberEntity'
                type: array
          description: List of Group's members
        "500":
          content: {}
          description: Internal server error
      security:
      - gravitee-auth: []
      summary: List Group members
      tags:
      - Group
      - Configuration
    post:
      operationId: addOrUpdateMember
      parameters:
      - in: path
        name: group
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/GroupMembership'
              type: array
        required: false
      responses:
        "200":
          content: {}
          description: Member has been updated
        "201":
          content: {}
          description: Member has been added
        "400":
          content: {}
          description: Membership is not valid
        "500":
          content: {}
          description: Internal server error
      security:
      - gravitee-auth: []
      summary: Add or update a group member
      tags:
      - Group
      - Configuration
      x-codegen-request-body-name: body
  /configuration/groups/{group}/members/{member}:
    delete:
      operationId: deleteMember
      parameters:
      - in: path
        name: group
        required: true
        schema:
          type: string
      - in: path
        name: member
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Member has been removed successfully
        "400":
          content: {}
          description: User does not exist
        "500":
          content: {}
          description: Internal server error
      security:
      - gravitee-auth: []
      summary: Remove a group member
      tags:
      - Group
      - Configuration
  /configuration/groups/{group}:
    delete:
      operationId: delete_10
      parameters:
      - in: path
        name: group
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Group successfully deleted
        "500":
          content: {}
          description: Internal server error
      security:
      - gravitee-auth: []
      summary: Delete the Group
      tags:
      - Group
      - Configuration
    get:
      operationId: get_5
      parameters:
      - in: path
        name: group
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupEntity'
          description: Group definition
        "500":
          content: {}
          description: Internal server error
      security:
      - gravitee-auth: []
      summary: Get a group
      tags:
      - Group
      - Configuration
    put:
      operationId: update_12
      parameters:
      - in: path
        name: group
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateGroupEntity'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupEntity'
          description: Group successfully updated
        "500":
          content: {}
          description: Internal server error
      security:
      - gravitee-auth: []
      summary: Update a group
      tags:
      - Group
      - Configuration
      x-codegen-request-body-name: group
  /configuration/tags:
    get:
      operationId: list_7
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TagEntity'
                type: array
          description: successful operation
      security:
      - gravitee-auth: []
      tags:
      - Sharding Tags
      - Configuration
    post:
      operationId: create_9
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/NewTagEntity'
              type: array
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TagEntity'
                type: array
          description: successful operation
      security:
      - gravitee-auth: []
      tags:
      - Sharding Tags
      - Configuration
      x-codegen-request-body-name: body
    put:
      operationId: update_13
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/UpdateTagEntity'
              type: array
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TagEntity'
                type: array
          description: successful operation
      security:
      - gravitee-auth: []
      tags:
      - Sharding Tags
      - Configuration
      x-codegen-request-body-name: body
  /configuration/tags/{tag}:
    delete:
      operationId: delete_11
      parameters:
      - in: path
        name: tag
        required: true
        schema:
          type: string
      responses:
        default:
          content: {}
          description: successful operation
      security:
      - gravitee-auth: []
      tags:
      - Sharding Tags
      - Configuration
  /configuration/tenants:
    get:
      operationId: list_8
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TenantEntity'
                type: array
          description: successful operation
      security:
      - gravitee-auth: []
      tags:
      - Configuration
      - Tenants
    post:
      operationId: create_10
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/NewTenantEntity'
              type: array
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TenantEntity'
                type: array
          description: successful operation
      security:
      - gravitee-auth: []
      tags:
      - Configuration
      - Tenants
      x-codegen-request-body-name: body
    put:
      operationId: update_14
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/UpdateTenantEntity'
              type: array
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TenantEntity'
                type: array
          description: successful operation
      security:
      - gravitee-auth: []
      tags:
      - Configuration
      - Tenants
      x-codegen-request-body-name: body
  /configuration/tenants/{tenant}:
    delete:
      operationId: delete_12
      parameters:
      - in: path
        name: tenant
        required: true
        schema:
          type: string
      responses:
        default:
          content: {}
          description: successful operation
      security:
      - gravitee-auth: []
      tags:
      - Configuration
      - Tenants
  /configuration/metadata:
    get:
      operationId: list_9
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/MetadataEntity'
                type: array
          description: successful operation
      security:
      - gravitee-auth: []
      tags:
      - Metadata
      - Configuration
    post:
      operationId: create_11
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewMetadataEntity'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetadataEntity'
          description: successful operation
      security:
      - gravitee-auth: []
      tags:
      - Metadata
      - Configuration
      x-codegen-request-body-name: body
    put:
      operationId: update_15
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateMetadataEntity'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetadataEntity'
          description: successful operation
      security:
      - gravitee-auth: []
      tags:
      - Metadata
      - Configuration
      x-codegen-request-body-name: body
  /configuration/metadata/{metadata}:
    delete:
      operationId: delete_13
      parameters:
      - in: path
        name: metadata
        required: true
        schema:
          type: string
      responses:
        default:
          content: {}
          description: successful operation
      security:
      - gravitee-auth: []
      tags:
      - Metadata
      - Configuration
  /configuration/rolescopes/{scope}/roles/{role}/users:
    get:
      operationId: listUsersPerRole
      parameters:
      - in: path
        name: scope
        required: true
        schema:
          enum:
          - MANAGEMENT
          - PORTAL
          - API
          - APPLICATION
          - GROUP
          type: string
      - in: path
        name: role
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/MembershipListItem'
                type: array
          description: successful operation
      security:
      - gravitee-auth: []
      tags:
      - Roles
      - Configuration
    post:
      operationId: addRoleToUser
      parameters:
      - in: path
        name: scope
        required: true
        schema:
          enum:
          - MANAGEMENT
          - PORTAL
          - API
          - APPLICATION
          type: string
      - in: path
        name: role
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoleMembership'
        required: false
      responses:
        default:
          content: {}
          description: successful operation
      security:
      - gravitee-auth: []
      summary: Add or update a role to a user
      tags:
      - Roles
      - Configuration
      x-codegen-request-body-name: body
  /configuration/rolescopes/{scope}/roles/{role}/users/{userId}:
    delete:
      operationId: delete_14
      parameters:
      - in: path
        name: scope
        required: true
        schema:
          enum:
          - MANAGEMENT
          - PORTAL
          - API
          - APPLICATION
          - GROUP
          type: string
      - in: path
        name: role
        required: true
        schema:
          type: string
      - in: path
        name: userId
        required: true
        schema:
          type: string
      responses:
        default:
          content: {}
          description: successful operation
      security:
      - gravitee-auth: []
      tags:
      - Roles
      - Configuration
  /configuration/rolescopes/{scope}/roles/{role}:
    delete:
      operationId: delete_15
      parameters:
      - in: path
        name: scope
        required: true
        schema:
          enum:
          - MANAGEMENT
          - PORTAL
          - API
          - APPLICATION
          - GROUP
          type: string
      - in: path
        name: role
        required: true
        schema:
          type: string
      responses:
        default:
          content: {}
          description: successful operation
      security:
      - gravitee-auth: []
      tags:
      - Roles
      - Configuration
    get:
      operationId: get_6
      parameters:
      - in: path
        name: scope
        required: true
        schema:
          enum:
          - MANAGEMENT
          - PORTAL
          - API
          - APPLICATION
          - GROUP
          type: string
      - in: path
        name: role
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleEntity'
          description: successful operation
      security:
      - gravitee-auth: []
      tags:
      - Roles
      - Configuration
    put:
      operationId: update_16
      parameters:
      - in: path
        name: scope
        required: true
        schema:
          enum:
          - MANAGEMENT
          - PORTAL
          - API
          - APPLICATION
          - GROUP
          type: string
      - in: path
        name: role
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateRoleEntity'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleEntity'
          description: successful operation
      security:
      - gravitee-auth: []
      tags:
      - Roles
      - Configuration
      x-codegen-request-body-name: body
  /configuration/rolescopes/{scope}/roles:
    get:
      operationId: list_10
      parameters:
      - in: path
        name: scope
        required: true
        schema:
          enum:
          - MANAGEMENT
          - PORTAL
          - API
          - APPLICATION
          - GROUP
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RoleEntity'
                type: array
          description: successful operation
      security:
      - gravitee-auth: []
      tags:
      - Roles
      - Configuration
    post:
      operationId: create_12
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewRoleEntity'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleEntity'
          description: successful operation
      security:
      - gravitee-auth: []
      tags:
      - Roles
      - Configuration
      x-codegen-request-body-name: body
  /configuration/rolescopes:
    get:
      operationId: list_11
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  items:
                    type: string
                  type: array
                type: object
          description: successful operation
      security:
      - gravitee-auth: []
      tags:
      - Roles
      - Configuration
  /configuration/notificationsettings:
    get:
      operationId: get_7
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  properties: {}
                  type: object
                type: array
          description: successful operation
      security:
      - gravitee-auth: []
      summary: Get notification settings
      tags:
      - Portal
      - Notifications
      - Configuration
    post:
      operationId: create_13
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenericNotificationConfigEntity'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: successful operation
      security:
      - gravitee-auth: []
      summary: Create notification settings
      tags:
      - Portal
      - Notifications
      - Configuration
      x-codegen-request-body-name: body
    put:
      operationId: update_18
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PortalNotificationConfigEntity'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PortalNotificationConfigEntity'
          description: successful operation
      security:
      - gravitee-auth: []
      summary: Update portal notification settings
      tags:
      - Portal
      - Notifications
      - Configuration
      x-codegen-request-body-name: body
  /configuration/notificationsettings/{notificationId}:
    delete:
      operationId: delete_16
      parameters:
      - in: path
        name: notificationId
        required: true
        schema:
          type: string
      responses:
        default:
          content: {}
          description: successful operation
      security:
      - gravitee-auth: []
      summary: Delete notification settings
      tags:
      - Portal
      - Notifications
      - Configuration
    put:
      operationId: update_17
      parameters:
      - in: path
        name: notificationId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenericNotificationConfigEntity'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericNotificationConfigEntity'
          description: successful operation
      security:
      - gravitee-auth: []
      summary: Update generic notification settings
      tags:
      - Portal
      - Notifications
      - Configuration
      x-codegen-request-body-name: body
  /configuration/top-apis:
    get:
      operationId: list_12
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TopApiEntity'
                type: array
          description: successful operation
      security:
      - gravitee-auth: []
      tags:
      - Top APIs
      - Configuration
    post:
      operationId: create_14
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewTopApiEntity'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TopApiEntity'
                type: array
          description: successful operation
      security:
      - gravitee-auth: []
      tags:
      - Top APIs
      - Configuration
      x-codegen-request-body-name: body
    put:
      operationId: update_19
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/UpdateTopApiEntity'
              type: array
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TopApiEntity'
                type: array
          description: successful operation
      security:
      - gravitee-auth: []
      tags:
      - Top APIs
      - Configuration
      x-codegen-request-body-name: body
  /configuration/top-apis/{topAPI}:
    delete:
      operationId: delete_17
      parameters:
      - in: path
        name: topAPI
        required: true
        schema:
          type: string
      responses:
        default:
          content: {}
          description: successful operation
      security:
      - gravitee-auth: []
      tags:
      - Top APIs
      - Configuration
  /configuration/plans:
    get:
      operationId: getConfiguration
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlansConfigurationEntity'
          description: successful operation
      security:
      - gravitee-auth: []
      tags:
      - Plans
      - Configuration
  /configuration/dictionaries:
    get:
      description: User must have the DICTIONARY[READ] permission to use this service
      operationId: listDictionaries
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DictionaryListItem'
                type: array
          description: List global dictionaries
        "500":
          content: {}
          description: Internal server error
      security:
      - gravitee-auth: []
      summary: Get the list of global dictionaries
      tags:
      - Configuration
      - Dictionaries
    post:
      description: User must have the DICTIONARY[CREATE] permission to use this service
      operationId: createDictionary
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewDictionaryEntity'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DictionaryEntity'
          description: Dictionary successfully created
        "500":
          content: {}
          description: Internal server error
      security:
      - gravitee-auth: []
      summary: Create a dictionary
      tags:
      - Configuration
      - Dictionaries
      x-codegen-request-body-name: dictionary
  /configuration/dictionaries/{dictionary}:
    delete:
      description: User must have the DICTIONARY[DELETE] permission to use this service
      operationId: deleteDictionary
      parameters:
      - in: path
        name: dictionary
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Dictionary successfully deleted
        "500":
          content: {}
          description: Internal server error
      security:
      - gravitee-auth: []
      summary: Delete a dictionary
      tags:
      - Configuration
      - Dictionaries
    get:
      description: User must have the DICTIONARY[READ] permission to use this service
      operationId: getDictionary
      parameters:
      - in: path
        name: dictionary
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: A dictionary
        "500":
          content: {}
          description: Internal server error
      security:
      - gravitee-auth: []
      summary: Get a dictionary
      tags:
      - Configuration
      - Dictionaries
    post:
      description: User must have the DICTIONARY[LIFECYCLE] permission to use this
        service
      operationId: doLifecycleAction_1
      parameters:
      - in: query
        name: action
        required: true
        schema:
          enum:
          - START
          - STOP
          type: string
      - in: path
        name: dictionary
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Dictionary state updated
        "500":
          content: {}
          description: Internal server error
      security:
      - gravitee-auth: []
      summary: Manage the dictionary's lifecycle
      tags:
      - Configuration
      - Dictionaries
    put:
      description: User must have the DICTIONARY[UPDATE] permission to use this service
      operationId: updateDictionary
      parameters:
      - in: path
        name: dictionary
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDictionaryEntity'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DictionaryEntity'
          description: Updated dictionary
        "500":
          content: {}
          description: Internal server error
      security:
      - gravitee-auth: []
      summary: Update a dictionary
      tags:
      - Configuration
      - Dictionaries
      x-codegen-request-body-name: dictionary
  /configuration/dictionaries/{dictionary}/_deploy:
    post:
      description: User must have the DICTIONARY[UPDATE] permission to use this service
      operationId: deployDictionary
      parameters:
      - in: path
        name: dictionary
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DictionaryEntity'
          description: Dictionary successfully deployed
        "500":
          content: {}
          description: Internal server error
      security:
      - gravitee-auth: []
      summary: Deploy dictionary to API gateway
      tags:
      - Configuration
      - Dictionaries
  /configuration/dictionaries/{dictionary}/_undeploy:
    post:
      description: User must have the DICTIONARY[UPDATE] permission to use this service
      operationId: undeployDictionary
      parameters:
      - in: path
        name: dictionary
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DictionaryEntity'
          description: Dictionary successfully undeployed
        "500":
          content: {}
          description: Internal server error
      security:
      - gravitee-auth: []
      summary: Undeploy dictionary to API gateway
      tags:
      - Configuration
      - Dictionaries
  /configuration/apiheaders/{id}:
    delete:
      operationId: delete_18
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        default:
          content: {}
          description: successful operation
      security:
      - gravitee-auth: []
      tags:
      - Configuration
    put:
      operationId: update_20
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateApiHeaderEntity'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiHeaderEntity'
          description: successful operation
      security:
      - gravitee-auth: []
      tags:
      - Configuration
      x-codegen-request-body-name: body
  /configuration/apiheaders:
    get:
      operationId: get_8
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiHeaderEntity'
                type: array
          description: successful operation
      security:
      - gravitee-auth: []
      tags:
      - Configuration
    post:
      operationId: create_15
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewApiHeaderEntity'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiHeaderEntity'
          description: successful operation
      security:
      - gravitee-auth: []
      tags:
      - Configuration
      x-codegen-request-body-name: body
  /configuration/identities:
    get:
      description: User must have the PORTAL_IDENTITY_PROVIDER[READ] permission to
        use this service
      operationId: listIdentityProviders
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/IdentityProviderListItem'
                type: array
          description: List identity providers
        "500":
          content: {}
          description: Internal server error
      security:
      - gravitee-auth: []
      summary: Get the list of identity providers
      tags:
      - Configuration
      - Identity Providers
    post:
      description: User must have the PORTAL_IDENTITY_PROVIDER[CREATE] permission
        to use this service
      operationId: createIdentityProvider
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewIdentityProviderEntity'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityProviderEntity'
          description: Identity provider successfully created
        "500":
          content: {}
          description: Internal server error
      security:
      - gravitee-auth: []
      summary: Create an identity provider
      tags:
      - Configuration
      - Identity Providers
      x-codegen-request-body-name: identity-provider
  /configuration/identities/{identityProvider}:
    delete:
      description: User must have the IDENTITY_PROVIDER[DELETE] permission to use
        this service
      operationId: deleteIdentityProvider
      parameters:
      - in: path
        name: identityProvider
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Identity provider successfully deleted
        "500":
          content: {}
          description: Internal server error
      security:
      - gravitee-auth: []
      summary: Delete an identity provider
      tags:
      - Configuration
      - Identity Providers
    get:
      description: User must have the IDENTITY_PROVIDER[READ] permission to use this
        service
      operationId: getIdentityProvider
      parameters:
      - in: path
        name: identityProvider
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: An identity provider
        "500":
          content: {}
          description: Internal server error
      security:
      - gravitee-auth: []
      summary: Get an identity provider
      tags:
      - Configuration
      - Identity Providers
    put:
      description: User must have the IDENTITY_PROVIDER[UPDATE] permission to use
        this service
      operationId: updateIdentityProvider
      parameters:
      - in: path
        name: identityProvider
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateIdentityProviderEntity'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityProviderEntity'
          description: Updated identity provider
        "500":
          content: {}
          description: Internal server error
      security:
      - gravitee-auth: []
      summary: Update an identity provider
      tags:
      - Configuration
      - Identity Providers
      x-codegen-request-body-name: dictionary
  /user/logout:
    post:
      operationId: logout
      responses:
        default:
          content: {}
          description: successful operation
      security:
      - gravitee-auth: []
      summary: Logout
      tags:
      - User
  /user/login:
    post:
      operationId: login
      responses:
        default:
          content: {}
          description: successful operation
      security:
      - gravitee-auth: []
      summary: Login
      tags:
      - User
  /user:
    get:
      operationId: getCurrentUser
      responses:
        default:
          content: {}
          description: successful operation
      security:
      - gravitee-auth: []
      summary: Get the authenticated user
      tags:
      - User
    put:
      operationId: updateCurrentUser
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/UpdateUserEntity'
        required: false
      responses:
        default:
          content: {}
          description: successful operation
      security:
      - gravitee-auth: []
      summary: Update user
      tags:
      - User
      x-codegen-request-body-name: body
  /user/avatar:
    get:
      operationId: getCurrentUserPicture
      responses:
        default:
          content: {}
          description: successful operation
      security:
      - gravitee-auth: []
      summary: Get user's avatar
      tags:
      - User
  /user/tasks:
    get:
      operationId: getUserTasks
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResult'
          description: successful operation
      security:
      - gravitee-auth: []
      tags:
      - User
  /user/notifications:
    delete:
      operationId: deleteAll
      responses:
        default:
          content: {}
          description: successful operation
      security:
      - gravitee-auth: []
      tags:
      - Notifications
      - User
    get:
      operationId: list_13
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResultPortalNotificationEntity'
          description: successful operation
      security:
      - gravitee-auth: []
      tags:
      - Notifications
      - User
  /user/notifications/{notification}:
    delete:
      operationId: delete_19
      parameters:
      - in: path
        name: notification
        required: true
        schema:
          type: string
      responses:
        default:
          content: {}
          description: successful operation
      security:
      - gravitee-auth: []
      tags:
      - Notifications
      - User
  /fetchers/{fetcher}:
    get:
      operationId: getFetcher
      parameters:
      - in: path
        name: fetcher
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FetcherEntity'
          description: successful operation
      security:
      - gravitee-auth: []
      tags:
      - Plugin
      - Fetcher
  /fetchers/{fetcher}/schema:
    get:
      operationId: getFetcherSchema
      parameters:
      - in: path
        name: fetcher
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
      security:
      - gravitee-auth: []
      tags:
      - Plugin
      - Fetcher
  /fetchers:
    get:
      operationId: list_14
      parameters:
      - explode: true
        in: query
        name: expand
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/FetcherListItem'
                type: array
          description: successful operation
      security:
      - gravitee-auth: []
      summary: List fetchers
      tags:
      - Plugin
      - Fetcher
  /instances:
    get:
      operationId: listInstances
      parameters:
      - in: query
        name: includeStopped
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/InstanceListItem'
                type: array
          description: successful operation
      security:
      - gravitee-auth: []
      summary: List gateway instances
      tags:
      - Gateway
  /instances/{instance}/monitoring/{gatewayId}:
    get:
      operationId: instanceMonitoring
      parameters:
      - in: path
        name: gatewayId
        required: true
        schema:
          type: string
      - in: path
        name: instance
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MonitoringData'
          description: successful operation
      security:
      - gravitee-auth: []
      summary: Get monitoring metrics for a gateway instance
      tags:
      - Gateway
  /instances/{instance}:
    get:
      operationId: getInstance
      parameters:
      - in: path
        name: instance
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InstanceEntity'
          description: successful operation
      security:
      - gravitee-auth: []
      summary: Get a gateway instance
      tags:
      - Gateway
  /messages:
    post:
      operationId: create_16
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MessageEntity'
        required: false
      responses:
        default:
          content: {}
          description: successful operation
      security:
      - gravitee-auth: []
      tags:
      - Messages
      x-codegen-request-body-name: body
  /platform/analytics:
    get:
      operationId: platformAnalytics
      parameters:
      - in: query
        name: from
        schema:
          format: int64
          type: integer
      - in: query
        name: to
        schema:
          format: int64
          type: integer
      - in: query
        name: interval
        schema:
          format: int64
          type: integer
      - in: query
        name: query
        schema:
          type: string
      - in: query
        name: key
        schema:
          type: string
      - in: query
        name: field
        schema:
          type: string
      - in: query
        name: size
        schema:
          format: int32
          type: integer
      - in: query
        name: type
        schema:
          type: string
      - in: query
        name: ranges
        schema:
          type: string
      - in: query
        name: order
        schema:
          type: string
      responses:
        default:
          content: {}
          description: successful operation
      security:
      - gravitee-auth: []
      tags:
      - Gateway
  /platform/events:
    get:
      operationId: listEvents
      parameters:
      - in: query
        name: type
        schema:
          default: all
          type: string
      - in: query
        name: from
        schema:
          format: int64
          type: integer
      - in: query
        name: to
        schema:
          format: int64
          type: integer
      - in: query
        name: page
        schema:
          default: 0
          format: int32
          type: integer
      - in: query
        name: size
        schema:
          default: 10
          format: int32
          type: integer
      - in: query
        name: api_ids
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageEventEntity'
          description: successful operation
      security:
      - gravitee-auth: []
      tags:
      - Gateway
  /platform/tickets:
    post:
      operationId: create_17
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewTicketEntity'
        required: false
      responses:
        default:
          content: {}
          description: successful operation
      security:
      - gravitee-auth: []
      tags:
      - Tickets
      - Gateway
      x-codegen-request-body-name: body
  /tickets:
    post:
      operationId: create_18
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewTicketEntity'
        required: false
      responses:
        default:
          content: {}
          description: successful operation
      security:
      - gravitee-auth: []
      tags:
      - Tickets
      x-codegen-request-body-name: body
  /policies:
    get:
      operationId: listPolicies
      parameters:
      - explode: true
        in: query
        name: expand
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PolicyListItem'
                type: array
          description: successful operation
      security:
      - gravitee-auth: []
      summary: List policies
      tags:
      - Plugin
      - Policy
  /policies/{policy}:
    get:
      operationId: getPolicy
      parameters:
      - in: path
        name: policy
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyEntity'
          description: successful operation
      security:
      - gravitee-auth: []
      summary: Get a policy
      tags:
      - Plugin
      - Policy
  /policies/{policy}/schema:
    get:
      operationId: getPolicySchema
      parameters:
      - in: path
        name: policy
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
      security:
      - gravitee-auth: []
      summary: Get a policy's schema
      tags:
      - Plugin
      - Policy
  /entrypoints:
    get:
      operationId: list_15
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/EntrypointEntity'
                type: array
          description: successful operation
      security:
      - gravitee-auth: []
      tags:
      - Portal entrypoints
  /portal:
    get:
      operationId: getConfig
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PortalConfigEntity'
          description: successful operation
      security:
      - gravitee-auth: []
      tags:
      - Portal
    post:
      operationId: savePortalConfig
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PortalConfigEntity'
        required: true
      responses:
        default:
          content: {}
          description: successful operation
      security:
      - gravitee-auth: []
      summary: Save the portal configuration
      tags:
      - Portal
      x-codegen-request-body-name: config
  /portal/pages:
    get:
      description: Every users can use this service
      operationId: listPages_1
      parameters:
      - in: query
        name: homepage
        schema:
          type: boolean
      - in: query
        name: type
        schema:
          enum:
          - MARKDOWN
          - RAML
          - SWAGGER
          - FOLDER
          type: string
      - in: query
        name: parent
        schema:
          type: string
      - in: query
        name: name
        schema:
          type: string
      - in: query
        name: root
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PageEntity'
                type: array
          description: List of pages
        "500":
          content: {}
          description: Internal server error
      security:
      - gravitee-auth: []
      summary: List pages
      tags:
      - Portal
    post:
      description: User must be ADMIN to use this service
      operationId: createPage_1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewPageEntity'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageEntity'
          description: Page successfully created
        "500":
          content: {}
          description: Internal server error
      security:
      - gravitee-auth: []
      summary: Create a page
      tags:
      - Portal
      x-codegen-request-body-name: page
  /portal/pages/{page}:
    delete:
      description: User must be ADMIN to use this service
      operationId: deletePage_1
      parameters:
      - in: path
        name: page
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Page successfully deleted
        "500":
          content: {}
          description: Internal server error
      security:
      - gravitee-auth: []
      summary: Delete a page
      tags:
      - Portal
    get:
      description: Every users can use this service
      operationId: getPage_1
      parameters:
      - in: path
        name: page
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Page
        "500":
          content: {}
          description: Internal server error
      security:
      - gravitee-auth: []
      summary: Get a page
      tags:
      - Portal
    patch:
      description: User must be ADMIN to use this service
      operationId: partialUpdatePage_1
      parameters:
      - in: path
        name: page
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePageEntity'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageEntity'
          description: successful operation
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageEntity'
          description: Page successfully updated
        "500":
          content: {}
          description: Internal server error
      security:
      - gravitee-auth: []
      summary: Update a page
      tags:
      - Portal
      x-codegen-request-body-name: page
    put:
      description: User must be ADMIN to use this service
      operationId: updatePage_1
      parameters:
      - in: path
        name: page
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePageEntity'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageEntity'
          description: successful operation
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageEntity'
          description: Page successfully updated
        "500":
          content: {}
          description: Internal server error
      security:
      - gravitee-auth: []
      summary: Update a page
      tags:
      - Portal
      x-codegen-request-body-name: page
  /portal/pages/{page}/_fetch:
    post:
      description: User must have the MANAGE_PAGES permission to use this service
      operationId: fetchPage_1
      parameters:
      - in: path
        name: page
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageEntity'
          description: successful operation
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageEntity'
          description: Page successfully refreshed
        "500":
          content: {}
          description: Internal server error
      security:
      - gravitee-auth: []
      summary: Refresh page by calling the associated fetcher
      tags:
      - Portal
  /portal/pages/_fetch:
    post:
      description: User must have the MANAGE_PAGES permission to use this service
      operationId: fetchAllPages_1
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageEntity'
          description: Pages successfully refreshed
        "500":
          content: {}
          description: Internal server error
      security:
      - gravitee-auth: []
      summary: Refresh all pages by calling their associated fetcher
      tags:
      - Portal
  /portal/pages/{page}/content:
    get:
      description: Every users can use this service
      operationId: getPageContent_1
      parameters:
      - in: path
        name: page
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Page's content
        "500":
          content: {}
          description: Internal server error
      security:
      - gravitee-auth: []
      summary: Get the page's content
      tags:
      - Portal
  /portal/apis/_search:
    post:
      operationId: searchPortalApis
      parameters:
      - in: query
        name: q
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiListItem'
                type: array
          description: List accessible APIs for current user
        "500":
          content: {}
          description: Internal server error
      security:
      - gravitee-auth: []
      summary: Search for API using the search engine
      tags:
      - Portal
      - API
  /portal/media/{hash}:
    get:
      operationId: getImage_1
      parameters:
      - in: path
        name: hash
        required: true
        schema:
          type: string
      responses:
        default:
          content: {}
          description: successful operation
      security:
      - gravitee-auth: []
      tags:
      - Portal
  /portal/media/upload:
    post:
      operationId: upload
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                file:
                  format: binary
                  type: string
      responses:
        default:
          content: {}
          description: successful operation
      security:
      - gravitee-auth: []
      tags:
      - Portal
  /portal/identities:
    get:
      operationId: listSocialIdentityProvider
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SocialIdentityProviderEntity'
                type: array
          description: List social identity providers
        "500":
          content: {}
          description: Internal server error
      security:
      - gravitee-auth: []
      summary: Get the list of social identity providers
      tags:
      - Portal
      - Social Authentication
      - Identity Providers
  /resources/{resource}/schema:
    get:
      operationId: getResourceSchema
      parameters:
      - in: path
        name: resource
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
      security:
      - gravitee-auth: []
      summary: Get a resource's schema
      tags:
      - Plugin
      - Resource
  /resources/{resource}:
    get:
      operationId: getResource
      parameters:
      - in: path
        name: resource
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PluginEntity'
          description: successful operation
      security:
      - gravitee-auth: []
      summary: Get a resource
      tags:
      - Plugin
      - Resource
  /resources:
    get:
      operationId: listResources
      parameters:
      - explode: true
        in: query
        name: expand
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ResourceListItem'
                type: array
          description: successful operation
      security:
      - gravitee-auth: []
      summary: List resources
      tags:
      - Plugin
      - Resource
  /services-discovery:
    get:
      operationId: listResources_1
      parameters:
      - explode: true
        in: query
        name: expand
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ResourceListItem'
                type: array
          description: successful operation
      security:
      - gravitee-auth: []
      summary: List service discovery plugins
      tags:
      - Plugin
      - Service Discovery
  /services-discovery/{plugin}:
    get:
      operationId: getServiceDiscovery
      parameters:
      - in: path
        name: plugin
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PluginEntity'
          description: successful operation
      security:
      - gravitee-auth: []
      summary: Get a service discovery
      tags:
      - Plugin
      - Service Discovery
  /services-discovery/{plugin}/schema:
    get:
      operationId: getServiceDiscoverySchema
      parameters:
      - in: path
        name: plugin
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
      security:
      - gravitee-auth: []
      summary: Get a service discovery's schema
      tags:
      - Plugin
      - Service Discovery
  /subscriptions:
    get:
      operationId: listUserSubscriptions
      parameters:
      - in: query
        name: application
        schema:
          type: string
      - in: query
        name: plan
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Subscription'
                type: array
                uniqueItems: true
          description: List of subscriptions
        "500":
          content: {}
          description: Internal server error
      security:
      - gravitee-auth: []
      summary: List subscriptions for authenticated user
      tags:
      - Subscription
  /users/register:
    post:
      operationId: registerUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewExternalUserEntity'
        required: false
      responses:
        default:
          content: {}
          description: successful operation
      security:
      - gravitee-auth: []
      tags:
      - User
      x-codegen-request-body-name: body
  /users/{id}:
    delete:
      operationId: deleteUser
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        default:
          content: {}
          description: successful operation
      security:
      - gravitee-auth: []
      tags:
      - User
    get:
      operationId: getUser
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserEntity'
          description: successful operation
      security:
      - gravitee-auth: []
      tags:
      - User
  /users/{id}/resetPassword:
    post:
      operationId: resetPassword
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        default:
          content: {}
          description: successful operation
      security:
      - gravitee-auth: []
      tags:
      - User
  /users/{id}/groups:
    get:
      operationId: getGroups
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UserGroupEntity'
                type: array
          description: successful operation
      security:
      - gravitee-auth: []
      tags:
      - User
  /users/{id}/memberships:
    get:
      operationId: getMemberships_1
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      - in: query
        name: type
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserMembershipList'
          description: successful operation
      security:
      - gravitee-auth: []
      tags:
      - User
  /users/{id}/avatar:
    get:
      operationId: getUserAvatar
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        default:
          content: {}
          description: successful operation
      security:
      - gravitee-auth: []
      tags:
      - User
  /users:
    get:
      description: User must have the MANAGEMENT_USERS[READ] permission to use this
        service
      operationId: findAll_1
      parameters:
      - in: query
        name: q
        schema:
          type: string
      - in: query
        name: size
        schema:
          default: 20
          format: int32
          maximum: 100
          minimum: 1
          type: integer
      - in: query
        name: page
        schema:
          default: 1
          format: int32
          minimum: 1
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserEntity'
          description: List users matching the query criteria
        "500":
          content: {}
          description: Internal server error
      security:
      - gravitee-auth: []
      summary: Search for API using the search engine
      tags:
      - User
    post:
      operationId: createUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterUserEntity'
        required: false
      responses:
        default:
          content: {}
          description: successful operation
      security:
      - gravitee-auth: []
      tags:
      - User
      x-codegen-request-body-name: body
  /auth/oauth2/{identity}/exchange:
    post:
      operationId: tokenExchange
      parameters:
      - in: path
        name: identity
        required: true
        schema:
          type: string
      - in: query
        name: token
        schema:
          type: string
      responses:
        default:
          content: {}
          description: successful operation
      security:
      - gravitee-auth: []
      tags:
      - Portal
      - OAuth2 Authentication
  /auth/oauth2/{identity}:
    post:
      operationId: exchangeAuthorizationCode
      parameters:
      - in: path
        name: identity
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Payload'
        required: false
      responses:
        default:
          content: {}
          description: successful operation
      security:
      - gravitee-auth: []
      tags:
      - Portal
      - OAuth2 Authentication
      x-codegen-request-body-name: body
  /search/users:
    get:
      operationId: searchUsers
      parameters:
      - in: query
        name: q
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SearchableUser'
                type: array
          description: List of users
        "400":
          content: {}
          description: Bad query parameter
        "500":
          content: {}
          description: Internal server error
      security:
      - gravitee-auth: []
      summary: Search for users
      tags:
      - Search
      - User
components:
  schemas:
    AlertMetric:
      example:
        thresholds:
        - description: description
          key: key
        - description: description
          key: key
        description: description
        key: key
      properties:
        key:
          type: string
        description:
          type: string
        thresholds:
          items:
            $ref: '#/components/schemas/AlertThreshold'
          type: array
      type: object
    AlertThreshold:
      example:
        description: description
        key: key
      properties:
        key:
          type: string
        description:
          type: string
      type: object
    Hook:
      type: object
    NewApiEntity:
      example:
        endpoint: endpoint
        paths:
        - paths
        - paths
        name: name
        contextPath: contextPath
        description: description
        groups:
        - groups
        - groups
        version: version
      properties:
        name:
          type: string
        version:
          type: string
        description:
          type: string
        contextPath:
          type: string
        endpoint:
          type: string
        groups:
          items:
            type: string
          type: array
          uniqueItems: true
        paths:
          items:
            type: string
          type: array
      required:
      - contextPath
      - description
      - endpoint
      - name
      - version
      type: object
    ImportSwaggerDescriptorEntity:
      example:
        payload: payload
        type: INLINE
      properties:
        type:
          enum:
          - INLINE
          - URL
          type: string
        payload:
          type: string
      required:
      - payload
      type: object
    ApiListItem:
      example:
        owner:
          displayName: displayName
          id: id
          email: email
        role: role
        visibility: PUBLIC
        picture_url: picture_url
        context_path: context_path
        description: description
        created_at: 1
        version: version
        labels:
        - labels
        - labels
        manageable: true
        tags:
        - tags
        - tags
        updated_at: 5
        rate: 0.8008281904610115
        name: name
        numberOfRatings: 6
        id: id
        state: INITIALIZED
        views:
        - views
        - views
      properties:
        id:
          type: string
        name:
          type: string
        version:
          type: string
        description:
          type: string
        visibility:
          enum:
          - PUBLIC
          - PRIVATE
          type: string
        state:
          enum:
          - INITIALIZED
          - STOPPED
          - STARTED
          - CLOSED
          type: string
        role:
          type: string
        views:
          items:
            type: string
          type: array
          uniqueItems: true
        labels:
          items:
            type: string
          type: array
        manageable:
          type: boolean
        rate:
          format: double
          type: number
        numberOfRatings:
          format: int32
          type: integer
        tags:
          items:
            type: string
          type: array
          uniqueItems: true
        created_at:
          format: int64
          type: integer
        updated_at:
          format: int64
          type: integer
        owner:
          $ref: '#/components/schemas/PrimaryOwnerEntity'
        picture_url:
          type: string
        context_path:
          type: string
      type: object
    PrimaryOwnerEntity:
      example:
        displayName: displayName
        id: id
        email: email
      properties:
        id:
          type: string
        email:
          type: string
        displayName:
          type: string
      type: object
    ApiHeaderEntity:
      example:
        updated_at: 1
        name: name
        created_at: 6
        id: id
        value: value
        order: 0
      properties:
        id:
          type: string
        name:
          type: string
        value:
          type: string
        order:
          format: int32
          type: integer
        created_at:
          format: int64
          type: integer
        updated_at:
          format: int64
          type: integer
      type: object
    ApiEntity:
      example:
        owner:
          displayName: displayName
          id: id
          email: email
        visibility: PUBLIC
        context_path: context_path
        picture_url: picture_url
        deployed_at: 2
        description: description
        groups:
        - groups
        - groups
        created_at: 7
        resources:
        - configuration: configuration
          name: name
          type: type
          enabled: true
        - configuration: configuration
          name: name
          type: type
          enabled: true
        path_mappings:
        - path_mappings
        - path_mappings
        services:
          all:
          - name: name
            enabled: true
          - name: name
            enabled: true
          empty: true
        version: version
        picture: picture
        tags:
        - tags
        - tags
        labels:
        - labels
        - labels
        proxy:
          cors:
            accessControlExposeHeaders:
            - accessControlExposeHeaders
            - accessControlExposeHeaders
            accessControlMaxAge: 5
            accessControlAllowCredentials: true
            accessControlAllowOrigin:
            - accessControlAllowOrigin
            - accessControlAllowOrigin
            accessControlAllowHeaders:
            - accessControlAllowHeaders
            - accessControlAllowHeaders
            errorStatusCode: 5
            enabled: true
            accessControlAllowMethods:
            - accessControlAllowMethods
            - accessControlAllowMethods
          failover:
            maxAttempts: 6
            cases:
            - TIMEOUT
            - TIMEOUT
            retryTimeout: 1
          contextPath: contextPath
          groups:
          - endpoints:
            - tenants:
              - tenants
              - tenants
              backup: true
              name: name
              weight: 0
              type: HTTP
              target: target
              status: UP
            - tenants:
              - tenants
              - tenants
              backup: true
              name: name
              weight: 0
              type: HTTP
              target: target
              status: UP
            loadBalancer:
              type: ROUND_ROBIN
            name: name
            services:
              all:
              - name: name
                enabled: true
              - name: name
                enabled: true
              empty: true
          - endpoints:
            - tenants:
              - tenants
              - tenants
              backup: true
              name: name
              weight: 0
              type: HTTP
              target: target
              status: UP
            - tenants:
              - tenants
              - tenants
              backup: true
              name: name
              weight: 0
              type: HTTP
              target: target
              status: UP
            loadBalancer:
              type: ROUND_ROBIN
            name: name
            services:
              all:
              - name: name
                enabled: true
              - name: name
                enabled: true
              empty: true
          logging:
            mode: NONE
            condition: condition
          stripContextPath: true
        updated_at: 9
        paths:
          key:
            path: path
            rules:
            - methods:
              - CONNECT
              - CONNECT
              description: description
              enabled: true
              policy:
                configuration: configuration
                name: name
            - methods:
              - CONNECT
              - CONNECT
              description: description
              enabled: true
              policy:
                configuration: configuration
                name: name
        name: name
        id: id
        state: INITIALIZED
        views:
        - views
        - views
        properties:
          values:
            key: values
          properties:
          - dynamic: true
            value: value
            key: key
          - dynamic: true
            value: value
            key: key
      properties:
        id:
          type: string
        name:
          type: string
        version:
          type: string
        description:
          type: string
        groups:
          items:
            type: string
          type: array
          uniqueItems: true
        visibility:
          enum:
          - PUBLIC
          - PRIVATE
          type: string
        state:
          enum:
          - INITIALIZED
          - STOPPED
          - STARTED
          - CLOSED
          type: string
        tags:
          items:
            type: string
          type: array
          uniqueItems: true
        picture:
          type: string
        views:
          items:
            type: string
          type: array
          uniqueItems: true
        labels:
          items:
            type: string
          type: array
        context_path:
          type: string
        proxy:
          $ref: '#/components/schemas/Proxy'
        paths:
          additionalProperties:
            $ref: '#/components/schemas/Path'
          type: object
        deployed_at:
          format: int64
          type: integer
        created_at:
          format: int64
          type: integer
        updated_at:
          format: int64
          type: integer
        owner:
          $ref: '#/components/schemas/PrimaryOwnerEntity'
        properties:
          $ref: '#/components/schemas/Properties'
        services:
          $ref: '#/components/schemas/Services'
        picture_url:
          type: string
        resources:
          items:
            $ref: '#/components/schemas/Resource'
          type: array
        path_mappings:
          items:
            type: string
          type: array
          uniqueItems: true
      required:
      - paths
      - proxy
      type: object
    Cors:
      example:
        accessControlExposeHeaders:
        - accessControlExposeHeaders
        - accessControlExposeHeaders
        accessControlMaxAge: 5
        accessControlAllowCredentials: true
        accessControlAllowOrigin:
        - accessControlAllowOrigin
        - accessControlAllowOrigin
        accessControlAllowHeaders:
        - accessControlAllowHeaders
        - accessControlAllowHeaders
        errorStatusCode: 5
        enabled: true
        accessControlAllowMethods:
        - accessControlAllowMethods
        - accessControlAllowMethods
      properties:
        enabled:
          type: boolean
        accessControlAllowOrigin:
          items:
            type: string
          type: array
          uniqueItems: true
        accessControlExposeHeaders:
          items:
            type: string
          type: array
          uniqueItems: true
        accessControlMaxAge:
          format: int32
          type: integer
        accessControlAllowCredentials:
          type: boolean
        accessControlAllowMethods:
          items:
            type: string
          type: array
          uniqueItems: true
        accessControlAllowHeaders:
          items:
            type: string
          type: array
          uniqueItems: true
        errorStatusCode:
          format: int32
          type: integer
      type: object
    Endpoint:
      example:
        tenants:
        - tenants
        - tenants
        backup: true
        name: name
        weight: 0
        type: HTTP
        target: target
        status: UP
      properties:
        name:
          type: string
        target:
          type: string
        weight:
          format: int32
          type: integer
        backup:
          type: boolean
        status:
          enum:
          - UP
          - DOWN
          - TRANSITIONALLY_DOWN
          - TRANSITIONALLY_UP
          type: string
        tenants:
          items:
            type: string
          type: array
        type:
          enum:
          - HTTP
          type: string
      type: object
    EndpointGroup:
      example:
        endpoints:
        - tenants:
          - tenants
          - tenants
          backup: true
          name: name
          weight: 0
          type: HTTP
          target: target
          status: UP
        - tenants:
          - tenants
          - tenants
          backup: true
          name: name
          weight: 0
          type: HTTP
          target: target
          status: UP
        loadBalancer:
          type: ROUND_ROBIN
        name: name
        services:
          all:
          - name: name
            enabled: true
          - name: name
            enabled: true
          empty: true
      properties:
        name:
          type: string
        endpoints:
          items:
            $ref: '#/components/schemas/Endpoint'
          type: array
          uniqueItems: true
        loadBalancer:
          $ref: '#/components/schemas/LoadBalancer'
        services:
          $ref: '#/components/schemas/Services'
      type: object
    Failover:
      example:
        maxAttempts: 6
        cases:
        - TIMEOUT
        - TIMEOUT
        retryTimeout: 1
      properties:
        maxAttempts:
          format: int32
          type: integer
        retryTimeout:
          format: int64
          type: integer
        cases:
          items:
            enum:
            - TIMEOUT
            type: string
          type: array
      type: object
    LoadBalancer:
      example:
        type: ROUND_ROBIN
      properties:
        type:
          enum:
          - ROUND_ROBIN
          - RANDOM
          - WEIGHTED_ROUND_ROBIN
          - WEIGHTED_RANDOM
          type: string
      type: object
    Logging:
      example:
        mode: NONE
        condition: condition
      properties:
        mode:
          enum:
          - NONE
          - CLIENT
          - PROXY
          - CLIENT_PROXY
          type: string
        condition:
          type: string
      type: object
    Path:
      example:
        path: path
        rules:
        - methods:
          - CONNECT
          - CONNECT
          description: description
          enabled: true
          policy:
            configuration: configuration
            name: name
        - methods:
          - CONNECT
          - CONNECT
          description: description
          enabled: true
          policy:
            configuration: configuration
            name: name
      properties:
        path:
          type: string
        rules:
          items:
            $ref: '#/components/schemas/Rule'
          type: array
      type: object
    Policy:
      example:
        configuration: configuration
        name: name
      properties:
        name:
          type: string
        configuration:
          type: string
      type: object
    Properties:
      example:
        values:
          key: values
        properties:
        - dynamic: true
          value: value
          key: key
        - dynamic: true
          value: value
          key: key
      properties:
        properties:
          items:
            $ref: '#/components/schemas/Property'
          type: array
        values:
          additionalProperties:
            type: string
          type: object
      type: object
    Property:
      example:
        dynamic: true
        value: value
        key: key
      properties:
        key:
          type: string
        value:
          type: string
        dynamic:
          type: boolean
      type: object
    Proxy:
      example:
        cors:
          accessControlExposeHeaders:
          - accessControlExposeHeaders
          - accessControlExposeHeaders
          accessControlMaxAge: 5
          accessControlAllowCredentials: true
          accessControlAllowOrigin:
          - accessControlAllowOrigin
          - accessControlAllowOrigin
          accessControlAllowHeaders:
          - accessControlAllowHeaders
          - accessControlAllowHeaders
          errorStatusCode: 5
          enabled: true
          accessControlAllowMethods:
          - accessControlAllowMethods
          - accessControlAllowMethods
        failover:
          maxAttempts: 6
          cases:
          - TIMEOUT
          - TIMEOUT
          retryTimeout: 1
        contextPath: contextPath
        groups:
        - endpoints:
          - tenants:
            - tenants
            - tenants
            backup: true
            name: name
            weight: 0
            type: HTTP
            target: target
            status: UP
          - tenants:
            - tenants
            - tenants
            backup: true
            name: name
            weight: 0
            type: HTTP
            target: target
            status: UP
          loadBalancer:
            type: ROUND_ROBIN
          name: name
          services:
            all:
            - name: name
              enabled: true
            - name: name
              enabled: true
            empty: true
        - endpoints:
          - tenants:
            - tenants
            - tenants
            backup: true
            name: name
            weight: 0
            type: HTTP
            target: target
            status: UP
          - tenants:
            - tenants
            - tenants
            backup: true
            name: name
            weight: 0
            type: HTTP
            target: target
            status: UP
          loadBalancer:
            type: ROUND_ROBIN
          name: name
          services:
            all:
            - name: name
              enabled: true
            - name: name
              enabled: true
            empty: true
        logging:
          mode: NONE
          condition: condition
        stripContextPath: true
      properties:
        contextPath:
          type: string
        groups:
          items:
            $ref: '#/components/schemas/EndpointGroup'
          type: array
          uniqueItems: true
        failover:
          $ref: '#/components/schemas/Failover'
        cors:
          $ref: '#/components/schemas/Cors'
        logging:
          $ref: '#/components/schemas/Logging'
        stripContextPath:
          type: boolean
      type: object
    Resource:
      example:
        configuration: configuration
        name: name
        type: type
        enabled: true
      properties:
        enabled:
          type: boolean
        name:
          type: string
        type:
          type: string
        configuration:
          type: string
      type: object
    Rule:
      example:
        methods:
        - CONNECT
        - CONNECT
        description: description
        enabled: true
        policy:
          configuration: configuration
          name: name
      properties:
        methods:
          items:
            enum:
            - CONNECT
            - DELETE
            - GET
            - HEAD
            - OPTIONS
            - PATCH
            - POST
            - PUT
            - TRACE
            - OTHER
            type: string
          type: array
          uniqueItems: true
        policy:
          $ref: '#/components/schemas/Policy'
        description:
          type: string
        enabled:
          type: boolean
      type: object
    Service:
      example:
        name: name
        enabled: true
      properties:
        name:
          type: string
        enabled:
          type: boolean
      type: object
    Services:
      example:
        all:
        - name: name
          enabled: true
        - name: name
          enabled: true
        empty: true
      properties:
        all:
          items:
            $ref: '#/components/schemas/Service'
          type: array
        empty:
          type: boolean
      type: object
    UpdateApiEntity:
      example:
        visibility: PUBLIC
        description: description
        resources:
        - configuration: configuration
          name: name
          type: type
          enabled: true
        - configuration: configuration
          name: name
          type: type
          enabled: true
        groups:
        - groups
        - groups
        path_mappings:
        - path_mappings
        - path_mappings
        services:
          all:
          - name: name
            enabled: true
          - name: name
            enabled: true
          empty: true
        version: version
        picture: picture
        tags:
        - tags
        - tags
        labels:
        - labels
        - labels
        proxy:
          cors:
            accessControlExposeHeaders:
            - accessControlExposeHeaders
            - accessControlExposeHeaders
            accessControlMaxAge: 5
            accessControlAllowCredentials: true
            accessControlAllowOrigin:
            - accessControlAllowOrigin
            - accessControlAllowOrigin
            accessControlAllowHeaders:
            - accessControlAllowHeaders
            - accessControlAllowHeaders
            errorStatusCode: 5
            enabled: true
            accessControlAllowMethods:
            - accessControlAllowMethods
            - accessControlAllowMethods
          failover:
            maxAttempts: 6
            cases:
            - TIMEOUT
            - TIMEOUT
            retryTimeout: 1
          contextPath: contextPath
          groups:
          - endpoints:
            - tenants:
              - tenants
              - tenants
              backup: true
              name: name
              weight: 0
              type: HTTP
              target: target
              status: UP
            - tenants:
              - tenants
              - tenants
              backup: true
              name: name
              weight: 0
              type: HTTP
              target: target
              status: UP
            loadBalancer:
              type: ROUND_ROBIN
            name: name
            services:
              all:
              - name: name
                enabled: true
              - name: name
                enabled: true
              empty: true
          - endpoints:
            - tenants:
              - tenants
              - tenants
              backup: true
              name: name
              weight: 0
              type: HTTP
              target: target
              status: UP
            - tenants:
              - tenants
              - tenants
              backup: true
              name: name
              weight: 0
              type: HTTP
              target: target
              status: UP
            loadBalancer:
              type: ROUND_ROBIN
            name: name
            services:
              all:
              - name: name
                enabled: true
              - name: name
                enabled: true
              empty: true
          logging:
            mode: NONE
            condition: condition
          stripContextPath: true
        paths:
          key:
            path: path
            rules:
            - methods:
              - CONNECT
              - CONNECT
              description: description
              enabled: true
              policy:
                configuration: configuration
                name: name
            - methods:
              - CONNECT
              - CONNECT
              description: description
              enabled: true
              policy:
                configuration: configuration
                name: name
        name: name
        views:
        - views
        - views
        properties:
          values:
            key: values
          properties:
          - dynamic: true
            value: value
            key: key
          - dynamic: true
            value: value
            key: key
      properties:
        name:
          type: string
        version:
          type: string
        description:
          type: string
        services:
          $ref: '#/components/schemas/Services'
        resources:
          items:
            $ref: '#/components/schemas/Resource'
          type: array
        visibility:
          enum:
          - PUBLIC
          - PRIVATE
          type: string
        tags:
          items:
            type: string
          type: array
          uniqueItems: true
        picture:
          type: string
        views:
          items:
            type: string
          type: array
          uniqueItems: true
        labels:
          items:
            type: string
          type: array
        groups:
          items:
            type: string
          type: array
          uniqueItems: true
        proxy:
          $ref: '#/components/schemas/Proxy'
        paths:
          additionalProperties:
            $ref: '#/components/schemas/Path'
          type: object
        properties:
          $ref: '#/components/schemas/Properties'
        path_mappings:
          items:
            type: string
          type: array
          uniqueItems: true
      required:
      - description
      - name
      - paths
      - proxy
      - version
      - visibility
      type: object
    NotifierEntity:
      example:
        name: name
        id: id
        type: type
      properties:
        id:
          type: string
        type:
          type: string
        name:
          type: string
      type: object
    GenericNotificationConfigEntity:
      example:
        name: name
        notifier: notifier
        referenceType: referenceType
        id: id
        useSystemProxy: true
        config_type: PORTAL
        config: config
        hooks:
        - hooks
        - hooks
        referenceId: referenceId
      properties:
        id:
          type: string
        name:
          type: string
        referenceType:
          type: string
        referenceId:
          type: string
        notifier:
          type: string
        config:
          type: string
        hooks:
          items:
            type: string
          type: array
        useSystemProxy:
          type: boolean
        config_type:
          enum:
          - PORTAL
          - GENERIC
          type: string
      type: object
    PortalNotificationConfigEntity:
      example:
        name: name
        referenceType: referenceType
        config_type: PORTAL
        user: user
        hooks:
        - hooks
        - hooks
        referenceId: referenceId
      properties:
        referenceType:
          type: string
        referenceId:
          type: string
        user:
          type: string
        hooks:
          items:
            type: string
          type: array
        config_type:
          enum:
          - PORTAL
          - GENERIC
          type: string
        name:
          type: string
      type: object
    ApiQualityMetricsEntity:
      example:
        score: 0.8008281904610115
        metrics_passed:
          key: true
      properties:
        score:
          format: double
          type: number
        metrics_passed:
          additionalProperties:
            type: boolean
          type: object
      type: object
    ApiKeyEntity:
      example:
        paused: true
        revoked_at: 5
        application: application
        updated_at: 1
        created_at: 6
        expire_at: 0
        subscription: subscription
        revoked: true
        plan: plan
        key: key
      properties:
        key:
          type: string
        subscription:
          type: string
        application:
          type: string
        plan:
          type: string
        revoked:
          type: boolean
        paused:
          type: boolean
        expire_at:
          format: int64
          type: integer
        created_at:
          format: int64
          type: integer
        updated_at:
          format: int64
          type: integer
        revoked_at:
          format: int64
          type: integer
      type: object
    TransferOwnership:
      example:
        reference: reference
        role: role
        id: id
      properties:
        id:
          type: string
        reference:
          type: string
        role:
          type: string
      required:
      - role
      type: object
    MembershipListItem:
      example:
        displayName: displayName
        id: id
      properties:
        displayName:
          type: string
        id:
          type: string
      type: object
    ApiMembership:
      example:
        reference: reference
        role: role
        id: id
      properties:
        id:
          description: User's technical identifier.
          type: string
        reference:
          description: User's reference for user providing from an identity provider.
          type: string
        role:
          description: Role's name
          type: string
      required:
      - role
      type: object
    MemberEntity:
      example:
        role: role
        updated_at: 6
        displayName: displayName
        permissions:
          key:
          - permissions
          - permissions
        created_at: 0
        id: id
        email: email
      properties:
        id:
          type: string
        displayName:
          type: string
        email:
          type: string
        role:
          type: string
        permissions:
          additionalProperties:
            items:
              type: string
            type: array
          type: object
        created_at:
          format: int64
          type: integer
        updated_at:
          format: int64
          type: integer
      type: object
    LogItem:
      properties:
        id:
          type: string
        timestamp:
          format: int64
          type: integer
      type: object
    SearchLogResponse:
      properties:
        total:
          format: int64
          type: integer
        logs:
          items:
            $ref: '#/components/schemas/LogItem'
          type: array
        metadata:
          additionalProperties:
            additionalProperties:
              type: string
            type: object
          type: object
      type: object
    ApiRequest:
      properties:
        id:
          type: string
        timestamp:
          format: int64
          type: integer
        transactionId:
          type: string
        uri:
          type: string
        path:
          type: string
        method:
          enum:
          - CONNECT
          - DELETE
          - GET
          - HEAD
          - OPTIONS
          - PATCH
          - POST
          - PUT
          - TRACE
          - OTHER
          type: string
        status:
          format: int32
          type: integer
        responseTime:
          format: int64
          type: integer
        apiResponseTime:
          format: int64
          type: integer
        requestContentLength:
          format: int64
          type: integer
        responseContentLength:
          format: int64
          type: integer
        apiKey:
          type: string
        plan:
          type: string
        application:
          type: string
        localAddress:
          type: string
        remoteAddress:
          type: string
        endpoint:
          type: string
        tenant:
          type: string
        clientRequest:
          $ref: '#/components/schemas/Request'
        proxyRequest:
          $ref: '#/components/schemas/Request'
        clientResponse:
          $ref: '#/components/schemas/Response'
        proxyResponse:
          $ref: '#/components/schemas/Response'
        message:
          type: string
        gateway:
          type: string
        subscription:
          type: string
        metadata:
          additionalProperties:
            additionalProperties:
              type: string
            type: object
          type: object
        host:
          type: string
      type: object
    Request:
      properties:
        method:
          enum:
          - CONNECT
          - DELETE
          - GET
          - HEAD
          - OPTIONS
          - PATCH
          - POST
          - PUT
          - TRACE
          - OTHER
          type: string
        headers:
          additionalProperties:
            items:
              type: string
            type: array
          type: object
        uri:
          type: string
        body:
          type: string
      type: object
    Response:
      properties:
        status:
          format: int32
          type: integer
        headers:
          additionalProperties:
            items:
              type: string
            type: array
          type: object
        body:
          type: string
      type: object
    Log:
      properties:
        id:
          type: string
        timestamp:
          format: int64
          type: integer
        gateway:
          type: string
        endpoint:
          type: string
        responseTime:
          format: int64
          type: integer
        success:
          type: boolean
        available:
          type: boolean
        state:
          format: int32
          type: integer
        message:
          type: string
        request:
          $ref: '#/components/schemas/Request'
        response:
          $ref: '#/components/schemas/Response'
      type: object
    PageEntity:
      example:
        lastContributor: lastContributor
        configuration:
          key: configuration
        published: true
        source:
          configuration: configuration
          type: type
        type: type
        content: content
        parentId: parentId
        lastModificationDate: 6
        excluded_groups:
        - excluded_groups
        - excluded_groups
        name: name
        id: id
        contentType: contentType
        order: 0
        homepage: true
      properties:
        id:
          type: string
        name:
          type: string
        type:
          type: string
        content:
          type: string
        order:
          format: int32
          type: integer
        lastContributor:
          type: string
        published:
          type: boolean
        lastModificationDate:
          format: int64
          type: integer
        contentType:
          type: string
        source:
          $ref: '#/components/schemas/PageSourceEntity'
        configuration:
          additionalProperties:
            type: string
          type: object
        homepage:
          type: boolean
        parentId:
          type: string
        excluded_groups:
          items:
            type: string
          type: array
      type: object
    PageSourceEntity:
      example:
        configuration: configuration
        type: type
      properties:
        type:
          type: string
        configuration:
          type: string
      type: object
    NewPageEntity:
      example:
        lastContributor: lastContributor
        excluded_groups:
        - excluded_groups
        - excluded_groups
        configuration:
          key: configuration
        name: name
        published: true
        source:
          configuration: configuration
          type: type
        type: MARKDOWN
        content: content
        parentId: parentId
        order: 0
        homepage: true
      properties:
        name:
          maxLength: 2147483647
          minLength: 1
          type: string
        type:
          enum:
          - MARKDOWN
          - RAML
          - SWAGGER
          - FOLDER
          type: string
        content:
          type: string
        order:
          format: int32
          type: integer
        published:
          type: boolean
        lastContributor:
          type: string
        source:
          $ref: '#/components/schemas/PageSourceEntity'
        configuration:
          additionalProperties:
            type: string
          type: object
        homepage:
          type: boolean
        parentId:
          type: string
        excluded_groups:
          items:
            type: string
          type: array
      required:
      - name
      - type
      type: object
    UpdatePageEntity:
      example:
        lastContributor: lastContributor
        excluded_groups:
        - excluded_groups
        - excluded_groups
        configuration:
          key: configuration
        name: name
        published: true
        source:
          configuration: configuration
          type: type
        content: content
        parentId: parentId
        order: 0
        homepage: true
      properties:
        name:
          maxLength: 2147483647
          minLength: 1
          type: string
        content:
          type: string
        lastContributor:
          type: string
        order:
          format: int32
          type: integer
        published:
          type: boolean
        source:
          $ref: '#/components/schemas/PageSourceEntity'
        configuration:
          additionalProperties:
            type: string
          type: object
        homepage:
          type: boolean
        parentId:
          type: string
        excluded_groups:
          items:
            type: string
          type: array
      required:
      - name
      type: object
    EventEntity:
      example:
        updated_at: 5
        payload: payload
        created_at: 5
        id: id
        type: PUBLISH_API
        user:
          sourceId: sourceId
          firstname: firstname
          password: password
          updated_at: 1
          roles:
          - permissions:
              key:
              - permissions
              - permissions
            scope: MANAGEMENT
            name: name
          - permissions:
              key:
              - permissions
              - permissions
            scope: MANAGEMENT
            name: name
          created_at: 6
          id: id
          source: source
          email: email
          picture: picture
          lastname: lastname
          lastConnectionAt: 0
        parentId: parentId
        properties:
          key: properties
      properties:
        id:
          type: string
        type:
          enum:
          - PUBLISH_API
          - PUBLISH_API_RESULT
          - UNPUBLISH_API
          - UNPUBLISH_API_RESULT
          - START_API
          - STOP_API
          - GATEWAY_STARTED
          - GATEWAY_STOPPED
          - PUBLISH_DICTIONARY
          - UNPUBLISH_DICTIONARY
          - START_DICTIONARY
          - STOP_DICTIONARY
          type: string
        payload:
          type: string
        parentId:
          type: string
        properties:
          additionalProperties:
            type: string
          type: object
        user:
          $ref: '#/components/schemas/UserEntity'
        created_at:
          format: int64
          type: integer
        updated_at:
          format: int64
          type: integer
      type: object
    UserEntity:
      example:
        sourceId: sourceId
        firstname: firstname
        password: password
        updated_at: 1
        roles:
        - permissions:
            key:
            - permissions
            - permissions
          scope: MANAGEMENT
          name: name
        - permissions:
            key:
            - permissions
            - permissions
          scope: MANAGEMENT
          name: name
        created_at: 6
        id: id
        source: source
        email: email
        picture: picture
        lastname: lastname
        lastConnectionAt: 0
      properties:
        id:
          type: string
        firstname:
          type: string
        lastname:
          type: string
        password:
          type: string
        email:
          type: string
        roles:
          items:
            $ref: '#/components/schemas/UserRoleEntity'
          type: array
          uniqueItems: true
        picture:
          type: string
        source:
          type: string
        sourceId:
          type: string
        lastConnectionAt:
          format: int64
          type: integer
        created_at:
          format: int64
          type: integer
        updated_at:
          format: int64
          type: integer
      type: object
    UserRoleEntity:
      example:
        permissions:
          key:
          - permissions
          - permissions
        scope: MANAGEMENT
        name: name
      properties:
        name:
          type: string
        scope:
          enum:
          - MANAGEMENT
          - PORTAL
          - API
          - APPLICATION
          - GROUP
          type: string
        permissions:
          additionalProperties:
            items:
              type: string
            type: array
          type: object
      type: object
    PlanEntity:
      example:
        securityDefinition: securityDefinition
        characteristics:
        - characteristics
        - characteristics
        comment_required: true
        closed_at: 5
        description: description
        created_at: 6
        type: API
        security: KEY_LESS
        apis:
        - apis
        - apis
        updated_at: 1
        excluded_groups:
        - excluded_groups
        - excluded_groups
        paths:
          key:
            path: path
            rules:
            - methods:
              - CONNECT
              - CONNECT
              description: description
              enabled: true
              policy:
                configuration: configuration
                name: name
            - methods:
              - CONNECT
              - CONNECT
              description: description
              enabled: true
              policy:
                configuration: configuration
                name: name
        name: name
        id: id
        published_at: 5
        validation: AUTO
        status: STAGING
        order: 0
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        validation:
          enum:
          - AUTO
          - MANUAL
          type: string
        security:
          enum:
          - KEY_LESS
          - API_KEY
          - OAUTH2
          - JWT
          type: string
        securityDefinition:
          type: string
        type:
          enum:
          - API
          - CATALOG
          type: string
        status:
          enum:
          - STAGING
          - PUBLISHED
          - CLOSED
          - DEPRECATED
          type: string
        apis:
          items:
            type: string
          type: array
          uniqueItems: true
        order:
          format: int32
          type: integer
        characteristics:
          items:
            type: string
          type: array
        created_at:
          format: int64
          type: integer
        updated_at:
          format: int64
          type: integer
        published_at:
          format: int64
          type: integer
        closed_at:
          format: int64
          type: integer
        paths:
          additionalProperties:
            $ref: '#/components/schemas/Path'
          type: object
        excluded_groups:
          items:
            type: string
          type: array
        comment_required:
          type: boolean
      required:
      - paths
      type: object
    UpdatePlanEntity:
      example:
        characteristics:
        - characteristics
        - characteristics
        securityDefinition: securityDefinition
        comment_required: true
        excluded_groups:
        - excluded_groups
        - excluded_groups
        paths:
          key:
            path: path
            rules:
            - methods:
              - CONNECT
              - CONNECT
              description: description
              enabled: true
              policy:
                configuration: configuration
                name: name
            - methods:
              - CONNECT
              - CONNECT
              description: description
              enabled: true
              policy:
                configuration: configuration
                name: name
        name: name
        description: description
        id: id
        validation: AUTO
        order: 0
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        validation:
          enum:
          - AUTO
          - MANUAL
          type: string
        characteristics:
          items:
            type: string
          type: array
        order:
          format: int32
          type: integer
        securityDefinition:
          type: string
        paths:
          additionalProperties:
            $ref: '#/components/schemas/Path'
          type: object
        excluded_groups:
          items:
            type: string
          type: array
        comment_required:
          type: boolean
      required:
      - description
      - name
      - order
      - paths
      - validation
      type: object
    NewPlanEntity:
      example:
        security: KEY_LESS
        securityDefinition: securityDefinition
        characteristics:
        - characteristics
        - characteristics
        comment_required: true
        excluded_groups:
        - excluded_groups
        - excluded_groups
        paths:
          key:
            path: path
            rules:
            - methods:
              - CONNECT
              - CONNECT
              description: description
              enabled: true
              policy:
                configuration: configuration
                name: name
            - methods:
              - CONNECT
              - CONNECT
              description: description
              enabled: true
              policy:
                configuration: configuration
                name: name
        name: name
        description: description
        api: api
        type: API
        validation: AUTO
        status: STAGING
      properties:
        name:
          type: string
        description:
          type: string
        validation:
          enum:
          - AUTO
          - MANUAL
          type: string
        security:
          enum:
          - KEY_LESS
          - API_KEY
          - OAUTH2
          - JWT
          type: string
        securityDefinition:
          type: string
        type:
          enum:
          - API
          - CATALOG
          type: string
        status:
          enum:
          - STAGING
          - PUBLISHED
          - CLOSED
          - DEPRECATED
          type: string
        api:
          type: string
        characteristics:
          items:
            type: string
          type: array
        paths:
          additionalProperties:
            $ref: '#/components/schemas/Path'
          type: object
        excluded_groups:
          items:
            type: string
          type: array
        comment_required:
          type: boolean
      required:
      - description
      - name
      - paths
      - security
      - status
      - type
      - validation
      type: object
    Page:
      example:
        per_page: 1
        current: 0
        size: 6
        total_elements: 5
        total_pages: 5
      properties:
        current:
          format: int32
          type: integer
        size:
          format: int32
          type: integer
        per_page:
          format: int32
          readOnly: true
          type: integer
        total_pages:
          format: int32
          readOnly: true
          type: integer
        total_elements:
          format: int32
          readOnly: true
          type: integer
      type: object
    PagedResult:
      example:
        metadata:
          key:
            key: '{}'
        data:
        - '{}'
        - '{}'
        page:
          per_page: 1
          current: 0
          size: 6
          total_elements: 5
          total_pages: 5
      properties:
        data:
          items:
            properties: {}
            type: object
          type: array
        metadata:
          additionalProperties:
            additionalProperties:
              properties: {}
              type: object
            type: object
          type: object
        page:
          $ref: '#/components/schemas/Page'
      type: object
    PagedResultSubscriptionEntity:
      properties:
        data:
          items:
            $ref: '#/components/schemas/SubscriptionEntity'
          type: array
        metadata:
          additionalProperties:
            additionalProperties:
              properties: {}
              type: object
            type: object
          type: object
        page:
          $ref: '#/components/schemas/Page'
      type: object
    SubscriptionEntity:
      properties:
        id:
          type: string
        api:
          type: string
        plan:
          type: string
        application:
          type: string
        status:
          enum:
          - PENDING
          - REJECTED
          - ACCEPTED
          - CLOSED
          - PAUSED
          - RESUMED
          type: string
        request:
          type: string
        reason:
          type: string
        processed_at:
          format: int64
          type: integer
        processed_by:
          type: string
        subscribed_by:
          type: string
        starting_at:
          format: int64
          type: integer
        ending_at:
          format: int64
          type: integer
        created_at:
          format: int64
          type: integer
        updated_at:
          format: int64
          type: integer
        closed_at:
          format: int64
          type: integer
        paused_at:
          format: int64
          type: integer
        client_id:
          type: string
      type: object
    Api:
      example:
        owner:
          displayName: displayName
          id: id
        name: name
        id: id
        version: version
      properties:
        id:
          type: string
        name:
          type: string
        version:
          type: string
        owner:
          $ref: '#/components/schemas/User'
      type: object
    Application:
      example:
        owner:
          displayName: displayName
          id: id
        name: name
        id: id
        type: type
      properties:
        id:
          type: string
        name:
          type: string
        type:
          type: string
        owner:
          $ref: '#/components/schemas/User'
      type: object
    Plan:
      example:
        security: KEY_LESS
        name: name
        id: id
      properties:
        id:
          type: string
        name:
          type: string
        security:
          enum:
          - KEY_LESS
          - API_KEY
          - OAUTH2
          - JWT
          type: string
      type: object
    Subscription:
      example:
        request: request
        reason: reason
        closed_at: 2
        subscribed_by:
          displayName: displayName
          id: id
        starting_at: 6
        created_at: 5
        client_id: client_id
        ending_at: 1
        paused_at: 7
        application:
          owner:
            displayName: displayName
            id: id
          name: name
          id: id
          type: type
        updated_at: 5
        processed_by: processed_by
        processed_at: 0
        id: id
        api:
          owner:
            displayName: displayName
            id: id
          name: name
          id: id
          version: version
        plan:
          security: KEY_LESS
          name: name
          id: id
        status: PENDING
      properties:
        id:
          type: string
        api:
          $ref: '#/components/schemas/Api'
        plan:
          $ref: '#/components/schemas/Plan'
        application:
          $ref: '#/components/schemas/Application'
        status:
          enum:
          - PENDING
          - REJECTED
          - ACCEPTED
          - CLOSED
          - PAUSED
          - RESUMED
          type: string
        request:
          type: string
        reason:
          type: string
        processed_at:
          format: int64
          type: integer
        processed_by:
          type: string
        subscribed_by:
          $ref: '#/components/schemas/User'
        starting_at:
          format: int64
          type: integer
        ending_at:
          format: int64
          type: integer
        created_at:
          format: int64
          type: integer
        updated_at:
          format: int64
          type: integer
        closed_at:
          format: int64
          type: integer
        paused_at:
          format: int64
          type: integer
        client_id:
          type: string
      type: object
    User:
      example:
        displayName: displayName
        id: id
      properties:
        id:
          type: string
        displayName:
          type: string
      type: object
    ProcessSubscriptionEntity:
      example:
        ending_at: 6
        reason: reason
        starting_at: 0
        accepted: true
        id: id
      properties:
        id:
          type: string
        accepted:
          type: boolean
        reason:
          type: string
        starting_at:
          format: int64
          type: integer
        ending_at:
          format: int64
          type: integer
      required:
      - accepted
      type: object
    UpdateSubscriptionEntity:
      example:
        ending_at: 6
        starting_at: 0
        id: id
      properties:
        id:
          type: string
        starting_at:
          format: int64
          type: integer
        ending_at:
          format: int64
          type: integer
      type: object
    ApplicationEntity:
      example:
        owner:
          displayName: displayName
          id: id
          email: email
        role: role
        clientId: clientId
        updated_at: 6
        name: name
        description: description
        groups:
        - groups
        - groups
        created_at: 0
        id: id
        type: type
        status: status
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        type:
          type: string
        groups:
          items:
            type: string
          type: array
          uniqueItems: true
        status:
          type: string
        role:
          type: string
        clientId:
          type: string
        created_at:
          format: int64
          type: integer
        updated_at:
          format: int64
          type: integer
        owner:
          $ref: '#/components/schemas/PrimaryOwnerEntity'
      type: object
    ApiMetadataEntity:
      example:
        defaultValue: defaultValue
        name: name
        format: STRING
        value: value
        key: key
        apiId: apiId
      properties:
        key:
          maxLength: 2147483647
          minLength: 1
          type: string
        name:
          type: string
        format:
          enum:
          - STRING
          - NUMERIC
          - BOOLEAN
          - DATE
          - MAIL
          - URL
          type: string
        value:
          maxLength: 2147483647
          minLength: 1
          type: string
        defaultValue:
          type: string
        apiId:
          type: string
      required:
      - key
      - value
      type: object
    UpdateApiMetadataEntity:
      example:
        hidden: true
        defaultValue: defaultValue
        name: name
        format: STRING
        value: value
        key: key
        apiId: apiId
      properties:
        key:
          type: string
        name:
          maxLength: 2147483647
          minLength: 1
          type: string
        format:
          enum:
          - STRING
          - NUMERIC
          - BOOLEAN
          - DATE
          - MAIL
          - URL
          type: string
        defaultValue:
          type: string
        value:
          type: string
        hidden:
          type: boolean
        apiId:
          type: string
      required:
      - name
      type: object
    NewApiMetadataEntity:
      example:
        hidden: true
        defaultValue: defaultValue
        name: name
        format: STRING
        value: value
        apiId: apiId
      properties:
        name:
          maxLength: 2147483647
          minLength: 1
          type: string
        format:
          enum:
          - STRING
          - NUMERIC
          - BOOLEAN
          - DATE
          - MAIL
          - URL
          type: string
        defaultValue:
          type: string
        value:
          type: string
        hidden:
          type: boolean
        apiId:
          type: string
      required:
      - name
      type: object
    RatingAnswerEntity:
      example:
        createdAt: 1
        userDisplayName: userDisplayName
        comment: comment
        id: id
        user: user
      properties:
        id:
          type: string
        user:
          type: string
        userDisplayName:
          type: string
        comment:
          type: string
        createdAt:
          format: int64
          type: integer
      type: object
    RatingEntity:
      example:
        createdAt: 0
        rate: rate
        answers:
        - createdAt: 1
          userDisplayName: userDisplayName
          comment: comment
          id: id
          user: user
        - createdAt: 1
          userDisplayName: userDisplayName
          comment: comment
          id: id
          user: user
        userDisplayName: userDisplayName
        comment: comment
        id: id
        api: api
        title: title
        user: user
        updatedAt: 6
      properties:
        id:
          type: string
        api:
          type: string
        user:
          type: string
        userDisplayName:
          type: string
        rate:
          format: byte
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
        title:
          type: string
        comment:
          type: string
        createdAt:
          format: int64
          type: integer
        updatedAt:
          format: int64
          type: integer
        answers:
          items:
            $ref: '#/components/schemas/RatingAnswerEntity'
          type: array
      type: object
    NewRatingAnswerEntity:
      example:
        ratingId: ratingId
        comment: comment
      properties:
        ratingId:
          type: string
        comment:
          maxLength: 1024
          minLength: 0
          type: string
      type: object
    RatingSummaryEntity:
      example:
        averageRate: 6.027456183070403
        numberOfRatings: 0
        numberOfRatingsByRate:
          key: 1
        api: api
      properties:
        api:
          type: string
        numberOfRatings:
          format: int32
          type: integer
        averageRate:
          format: double
          type: number
        numberOfRatingsByRate:
          additionalProperties:
            format: int64
            type: integer
          type: object
      type: object
    UpdateRatingEntity:
      example:
        rate: rate
        comment: comment
        id: id
        api: api
        title: title
      properties:
        id:
          type: string
        api:
          type: string
        rate:
          format: byte
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
        title:
          maxLength: 64
          minLength: 0
          type: string
        comment:
          maxLength: 1024
          minLength: 0
          type: string
      type: object
    PageRatingEntity:
      example:
        pageElements: 0
        pageNumber: 6
        content:
        - createdAt: 0
          rate: rate
          answers:
          - createdAt: 1
            userDisplayName: userDisplayName
            comment: comment
            id: id
            user: user
          - createdAt: 1
            userDisplayName: userDisplayName
            comment: comment
            id: id
            user: user
          userDisplayName: userDisplayName
          comment: comment
          id: id
          api: api
          title: title
          user: user
          updatedAt: 6
        - createdAt: 0
          rate: rate
          answers:
          - createdAt: 1
            userDisplayName: userDisplayName
            comment: comment
            id: id
            user: user
          - createdAt: 1
            userDisplayName: userDisplayName
            comment: comment
            id: id
            user: user
          userDisplayName: userDisplayName
          comment: comment
          id: id
          api: api
          title: title
          user: user
          updatedAt: 6
        totalElements: 1
      properties:
        content:
          items:
            $ref: '#/components/schemas/RatingEntity'
          type: array
        pageElements:
          format: int64
          type: integer
        pageNumber:
          format: int32
          type: integer
        totalElements:
          format: int64
          type: integer
      type: object
    NewRatingEntity:
      example:
        rate: rate
        comment: comment
        api: api
        title: title
      properties:
        api:
          type: string
        rate:
          format: byte
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
        title:
          maxLength: 64
          minLength: 0
          type: string
        comment:
          maxLength: 1024
          minLength: 0
          type: string
      type: object
    AuditEntity:
      example:
        patch: patch
        createdAt: 0
        referenceType: referenceType
        id: id
        event: event
        user: user
        referenceId: referenceId
        properties:
          key: properties
      properties:
        id:
          type: string
        referenceId:
          type: string
        referenceType:
          type: string
        user:
          type: string
        createdAt:
          format: int64
          type: integer
        event:
          type: string
        properties:
          additionalProperties:
            type: string
          type: object
        patch:
          type: string
      type: object
    MetadataPage:
      properties:
        content:
          items:
            properties: {}
            type: object
          type: array
        metadata:
          additionalProperties:
            type: string
          type: object
        pageElements:
          format: int64
          type: integer
        pageNumber:
          format: int32
          type: integer
        totalElements:
          format: int64
          type: integer
      type: object
    MetadataPageAuditEntity:
      example:
        pageElements: 6
        metadata:
          key: metadata
        pageNumber: 1
        content:
        - patch: patch
          createdAt: 0
          referenceType: referenceType
          id: id
          event: event
          user: user
          referenceId: referenceId
          properties:
            key: properties
        - patch: patch
          createdAt: 0
          referenceType: referenceType
          id: id
          event: event
          user: user
          referenceId: referenceId
          properties:
            key: properties
        totalElements: 5
      properties:
        content:
          items:
            $ref: '#/components/schemas/AuditEntity'
          type: array
        metadata:
          additionalProperties:
            type: string
          type: object
        pageElements:
          format: int64
          type: integer
        pageNumber:
          format: int32
          type: integer
        totalElements:
          format: int64
          type: integer
      type: object
    AlertEntity:
      example:
        reference_id: reference_id
        description: description
        created_at: 6
        threshold: 0.8008281904610115
        type: HEALTH_CHECK
        enabled: true
        reference_type: API
        metricType: QUOTA
        updated_at: 1
        metric: ERROR
        name: name
        id: id
        plan: plan
        thresholdType: COUNT
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        type:
          enum:
          - HEALTH_CHECK
          - REQUEST
          type: string
        enabled:
          type: boolean
        metricType:
          enum:
          - QUOTA
          type: string
        metric:
          enum:
          - ERROR
          - SERVER_ERROR
          - NOT_FOUND
          - INTERNAL_SERVER_ERROR
          type: string
        thresholdType:
          enum:
          - COUNT
          - PERCENT_RATE
          type: string
        threshold:
          format: double
          type: number
        plan:
          type: string
        reference_type:
          enum:
          - API
          - APPLICATION
          type: string
        reference_id:
          type: string
        created_at:
          format: int64
          type: integer
        updated_at:
          format: int64
          type: integer
      type: object
    UpdateAlertEntity:
      example:
        metricType: QUOTA
        reference_id: reference_id
        metric: ERROR
        name: name
        description: description
        threshold: 0.8008281904610115
        id: id
        type: HEALTH_CHECK
        plan: plan
        enabled: true
        thresholdType: COUNT
        reference_type: API
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        type:
          enum:
          - HEALTH_CHECK
          - REQUEST
          type: string
        enabled:
          type: boolean
        metricType:
          enum:
          - QUOTA
          type: string
        metric:
          enum:
          - ERROR
          - SERVER_ERROR
          - NOT_FOUND
          - INTERNAL_SERVER_ERROR
          type: string
        thresholdType:
          enum:
          - COUNT
          - PERCENT_RATE
          type: string
        threshold:
          format: double
          type: number
        plan:
          type: string
        reference_type:
          enum:
          - API
          - APPLICATION
          type: string
        reference_id:
          type: string
      required:
      - name
      type: object
    NewAlertEntity:
      example:
        metricType: QUOTA
        reference_id: reference_id
        metric: ERROR
        name: name
        description: description
        threshold: 0.8008281904610115
        type: HEALTH_CHECK
        plan: plan
        enabled: true
        thresholdType: COUNT
        reference_type: API
      properties:
        name:
          type: string
        description:
          type: string
        type:
          enum:
          - HEALTH_CHECK
          - REQUEST
          type: string
        enabled:
          type: boolean
        metricType:
          enum:
          - QUOTA
          type: string
        metric:
          enum:
          - ERROR
          - SERVER_ERROR
          - NOT_FOUND
          - INTERNAL_SERVER_ERROR
          type: string
        thresholdType:
          enum:
          - COUNT
          - PERCENT_RATE
          type: string
        threshold:
          format: double
          type: number
        plan:
          type: string
        reference_type:
          enum:
          - API
          - APPLICATION
          type: string
        reference_id:
          type: string
      required:
      - name
      type: object
    MessageEntity:
      example:
        recipient:
          role_value:
          - role_value
          - role_value
          url: url
          role_scope: role_scope
        channel: MAIL
        text: text
        title: title
        params:
          key: params
        useSystemProxy: true
      properties:
        recipient:
          $ref: '#/components/schemas/MessageRecipientEntity'
        channel:
          enum:
          - MAIL
          - PORTAL
          - HTTP
          type: string
        title:
          type: string
        text:
          type: string
        params:
          additionalProperties:
            type: string
          type: object
        useSystemProxy:
          type: boolean
      type: object
    MessageRecipientEntity:
      example:
        role_value:
        - role_value
        - role_value
        url: url
        role_scope: role_scope
      properties:
        url:
          type: string
        role_scope:
          type: string
        role_value:
          items:
            type: string
          type: array
      type: object
    VerifyApiParam:
      example:
        context_path: context_path
      properties:
        context_path:
          type: string
      required:
      - context_path
      type: object
    NewApplicationEntity:
      example:
        clientId: clientId
        name: name
        description: description
        groups:
        - groups
        - groups
        type: type
      properties:
        name:
          type: string
        description:
          type: string
        type:
          type: string
        clientId:
          type: string
        groups:
          items:
            type: string
          type: array
          uniqueItems: true
      required:
      - description
      - name
      type: object
    UpdateApplicationEntity:
      example:
        clientId: clientId
        name: name
        description: description
        groups:
        - groups
        - groups
        type: type
      properties:
        name:
          type: string
        description:
          type: string
        type:
          type: string
        clientId:
          type: string
        groups:
          items:
            type: string
          type: array
          uniqueItems: true
      required:
      - description
      - name
      type: object
    ApplicationMembership:
      example:
        reference: reference
        role: role
        id: id
      properties:
        id:
          description: User's technical identifier.
          type: string
        reference:
          description: User's reference for user providing from an identity provider.
          type: string
        role:
          description: Role's name
          type: string
      required:
      - role
      type: object
    NewSubscriptionEntity:
      example:
        request: request
        application: application
        plan: plan
      properties:
        application:
          type: string
        plan:
          type: string
        request:
          type: string
      type: object
    SubscribedApi:
      properties:
        id:
          type: string
        name:
          type: string
      type: object
    ApplicationRequest:
      properties:
        id:
          type: string
        timestamp:
          format: int64
          type: integer
        transactionId:
          type: string
        path:
          type: string
        method:
          enum:
          - CONNECT
          - DELETE
          - GET
          - HEAD
          - OPTIONS
          - PATCH
          - POST
          - PUT
          - TRACE
          - OTHER
          type: string
        status:
          format: int32
          type: integer
        responseTime:
          format: int64
          type: integer
        requestContentLength:
          format: int64
          type: integer
        responseContentLength:
          format: int64
          type: integer
        apiKey:
          type: string
        plan:
          type: string
        api:
          type: string
        request:
          $ref: '#/components/schemas/Request'
        response:
          $ref: '#/components/schemas/Response'
        metadata:
          additionalProperties:
            additionalProperties:
              type: string
            type: object
          type: object
        host:
          type: string
      type: object
    EntrypointEntity:
      example:
        id: id
        value: value
        tags:
        - tags
        - tags
      properties:
        id:
          type: string
        value:
          type: string
        tags:
          items:
            type: string
          type: array
      type: object
    UpdateEntryPointEntity:
      example:
        id: id
        value: value
        tags:
        - tags
        - tags
        - tags
        - tags
        - tags
      properties:
        id:
          type: string
        value:
          maxLength: 2147483647
          minLength: 1
          type: string
        tags:
          items:
            type: string
          maxItems: 2147483647
          minItems: 1
          type: array
      required:
      - tags
      - value
      type: object
    NewEntryPointEntity:
      example:
        value: value
        tags:
        - tags
        - tags
        - tags
        - tags
        - tags
      properties:
        value:
          maxLength: 2147483647
          minLength: 1
          type: string
        tags:
          items:
            type: string
          maxItems: 2147483647
          minItems: 1
          type: array
      required:
      - tags
      - value
      type: object
    ViewEntity:
      example:
        createdAt: 6
        defaultView: true
        totalApis: 5
        hidden: true
        highlightApi: highlightApi
        name: name
        description: description
        id: id
        order: 0
        updatedAt: 1
      properties:
        id:
          type: string
        name:
          maxLength: 2147483647
          minLength: 1
          type: string
        description:
          type: string
        defaultView:
          type: boolean
        hidden:
          type: boolean
        order:
          format: int32
          type: integer
        createdAt:
          format: int64
          type: integer
        updatedAt:
          format: int64
          type: integer
        totalApis:
          format: int64
          type: integer
        highlightApi:
          type: string
      required:
      - name
      type: object
    UpdateViewEntity:
      example:
        defaultView: true
        hidden: true
        highlightApi: highlightApi
        name: name
        description: description
        id: id
        order: 0
      properties:
        id:
          type: string
        name:
          maxLength: 2147483647
          minLength: 1
          type: string
        description:
          type: string
        defaultView:
          type: boolean
        hidden:
          type: boolean
        order:
          format: int32
          type: integer
        highlightApi:
          type: string
      required:
      - name
      type: object
    NewViewEntity:
      example:
        hidden: true
        highlightApi: highlightApi
        name: name
        description: description
        order: 0
      properties:
        name:
          maxLength: 2147483647
          minLength: 1
          type: string
        description:
          type: string
        hidden:
          type: boolean
        order:
          format: int32
          type: integer
        highlightApi:
          type: string
      required:
      - name
      type: object
    GroupEventRuleEntity:
      example:
        event: event
      properties:
        event:
          type: string
      type: object
    NewGroupEntity:
      example:
        event_rules:
        - event: event
        - event: event
        name: name
      properties:
        name:
          type: string
        event_rules:
          items:
            $ref: '#/components/schemas/GroupEventRuleEntity'
          type: array
      required:
      - name
      type: object
    GroupEntity:
      example:
        event_rules:
        - event: event
        - event: event
        updated_at: 6
        roles:
          key: roles
        name: name
        created_at: 0
        id: id
        manageable: true
      properties:
        id:
          type: string
        name:
          type: string
        manageable:
          type: boolean
        roles:
          additionalProperties:
            type: string
          type: object
        event_rules:
          items:
            $ref: '#/components/schemas/GroupEventRuleEntity'
          type: array
        created_at:
          format: int64
          type: integer
        updated_at:
          format: int64
          type: integer
      type: object
    GroupMembersResource:
      type: object
    GroupMembership:
      example:
        reference: reference
        roles:
        - scope: MANAGEMENT
          name: name
        - scope: MANAGEMENT
          name: name
        id: id
      properties:
        id:
          type: string
        reference:
          type: string
        roles:
          items:
            $ref: '#/components/schemas/MemberRoleEntity'
          type: array
      type: object
    MemberRoleEntity:
      example:
        scope: MANAGEMENT
        name: name
      properties:
        scope:
          enum:
          - MANAGEMENT
          - PORTAL
          - API
          - APPLICATION
          - GROUP
          type: string
        name:
          type: string
      type: object
    GroupMemberEntity:
      properties:
        id:
          type: string
        displayName:
          type: string
        roles:
          additionalProperties:
            type: string
          type: object
        created_at:
          format: int64
          type: integer
        updated_at:
          format: int64
          type: integer
      type: object
    UpdateGroupEntity:
      example:
        event_rules:
        - event: event
        - event: event
        roles:
          key: roles
        name: name
      properties:
        name:
          type: string
        roles:
          additionalProperties:
            type: string
          type: object
        event_rules:
          items:
            $ref: '#/components/schemas/GroupEventRuleEntity'
          type: array
      required:
      - name
      type: object
    TagEntity:
      example:
        name: name
        description: description
        id: id
      properties:
        id:
          type: string
        name:
          maxLength: 2147483647
          minLength: 1
          type: string
        description:
          type: string
      required:
      - name
      type: object
    UpdateTagEntity:
      example:
        name: name
        description: description
        id: id
      properties:
        id:
          type: string
        name:
          maxLength: 2147483647
          minLength: 1
          type: string
        description:
          type: string
      required:
      - name
      type: object
    NewTagEntity:
      example:
        name: name
        description: description
      properties:
        name:
          maxLength: 2147483647
          minLength: 1
          type: string
        description:
          type: string
      required:
      - name
      type: object
    TenantEntity:
      example:
        name: name
        description: description
        id: id
      properties:
        id:
          type: string
        name:
          maxLength: 2147483647
          minLength: 1
          type: string
        description:
          type: string
      required:
      - name
      type: object
    UpdateTenantEntity:
      example:
        name: name
        description: description
        id: id
      properties:
        id:
          type: string
        name:
          maxLength: 2147483647
          minLength: 1
          type: string
        description:
          type: string
      required:
      - name
      type: object
    NewTenantEntity:
      example:
        name: name
        description: description
      properties:
        name:
          maxLength: 2147483647
          minLength: 1
          type: string
        description:
          type: string
      required:
      - name
      type: object
    MetadataEntity:
      example:
        name: name
        format: STRING
        value: value
        key: key
      properties:
        key:
          type: string
        name:
          maxLength: 2147483647
          minLength: 1
          type: string
        format:
          enum:
          - STRING
          - NUMERIC
          - BOOLEAN
          - DATE
          - MAIL
          - URL
          type: string
        value:
          type: string
      required:
      - name
      type: object
    UpdateMetadataEntity:
      example:
        hidden: true
        name: name
        format: STRING
        value: value
        key: key
      properties:
        key:
          type: string
        name:
          maxLength: 2147483647
          minLength: 1
          type: string
        format:
          enum:
          - STRING
          - NUMERIC
          - BOOLEAN
          - DATE
          - MAIL
          - URL
          type: string
        value:
          type: string
        hidden:
          type: boolean
      required:
      - name
      type: object
    NewMetadataEntity:
      example:
        hidden: true
        name: name
        format: STRING
        value: value
      properties:
        name:
          maxLength: 2147483647
          minLength: 1
          type: string
        format:
          enum:
          - STRING
          - NUMERIC
          - BOOLEAN
          - DATE
          - MAIL
          - URL
          type: string
        value:
          type: string
        hidden:
          type: boolean
      required:
      - name
      type: object
    RoleMembership:
      example:
        reference: reference
        id: id
      properties:
        id:
          type: string
        reference:
          type: string
      type: object
    RoleEntity:
      example:
        default: true
        system: true
        permissions:
          key:
          - permissions
          - permissions
        scope: MANAGEMENT
        name: name
        description: description
      properties:
        name:
          type: string
        description:
          type: string
        scope:
          enum:
          - MANAGEMENT
          - PORTAL
          - API
          - APPLICATION
          - GROUP
          type: string
        system:
          type: boolean
        permissions:
          additionalProperties:
            items:
              type: string
            type: array
          type: object
        default:
          type: boolean
      type: object
    UpdateRoleEntity:
      example:
        default: true
        permissions:
          key:
          - permissions
          - permissions
        scope: MANAGEMENT
        name: name
        description: description
      properties:
        name:
          maxLength: 2147483647
          minLength: 1
          type: string
        description:
          type: string
        scope:
          enum:
          - MANAGEMENT
          - PORTAL
          - API
          - APPLICATION
          - GROUP
          type: string
        permissions:
          additionalProperties:
            items:
              type: string
            type: array
          type: object
        default:
          type: boolean
      required:
      - name
      - scope
      type: object
    NewRoleEntity:
      example:
        default: true
        permissions:
          key:
          - permissions
          - permissions
        scope: MANAGEMENT
        name: name
        description: description
      properties:
        name:
          maxLength: 2147483647
          minLength: 1
          type: string
        description:
          type: string
        scope:
          enum:
          - MANAGEMENT
          - PORTAL
          - API
          - APPLICATION
          - GROUP
          type: string
        permissions:
          additionalProperties:
            items:
              type: string
            type: array
          type: object
        default:
          type: boolean
      required:
      - name
      - scope
      type: object
    TopApiEntity:
      example:
        picture_url: picture_url
        name: name
        description: description
        api: api
        version: version
        order: 0
      properties:
        api:
          type: string
        name:
          type: string
        version:
          type: string
        description:
          type: string
        order:
          format: int32
          type: integer
        picture_url:
          type: string
      type: object
    UpdateTopApiEntity:
      example:
        api: api
        order: 0
      properties:
        api:
          type: string
        order:
          format: int32
          type: integer
      type: object
    NewTopApiEntity:
      example:
        api: api
      properties:
        api:
          type: string
      type: object
    PlanSecurityEntity:
      example:
        name: name
        id: id
        policy: policy
      properties:
        id:
          type: string
        name:
          type: string
        policy:
          type: string
      type: object
    PlansConfigurationEntity:
      example:
        security:
        - name: name
          id: id
          policy: policy
        - name: name
          id: id
          policy: policy
      properties:
        security:
          items:
            $ref: '#/components/schemas/PlanSecurityEntity'
          type: array
      type: object
    DictionaryListItem:
      example:
        updated_at: 1
        provider: provider
        deployed_at: 5
        name: name
        description: description
        created_at: 6
        id: id
        state: INITIALIZED
        type: MANUAL
        properties: 0
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        type:
          enum:
          - MANUAL
          - DYNAMIC
          type: string
        provider:
          type: string
        state:
          enum:
          - INITIALIZED
          - STOPPED
          - STARTED
          - CLOSED
          type: string
        properties:
          format: int32
          type: integer
        created_at:
          format: int64
          type: integer
        updated_at:
          format: int64
          type: integer
        deployed_at:
          format: int64
          type: integer
      type: object
    DictionaryEntity:
      example:
        updated_at: 1
        provider:
          configuration:
            integralNumber: true
            double: true
            valueNode: true
            bigInteger: true
            floatingPointNumber: true
            float: true
            nodeType: ARRAY
            textual: true
            int: true
            long: true
            missingNode: true
            pojo: true
            number: true
            boolean: true
            null: true
            array: true
            binary: true
            containerNode: true
            short: true
            bigDecimal: true
            object: true
          type: type
        deployed_at: 5
        name: name
        description: description
        created_at: 6
        id: id
        state: INITIALIZED
        trigger:
          unit: NANOSECONDS
          rate: 0
        type: MANUAL
        properties:
          key: properties
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        type:
          enum:
          - MANUAL
          - DYNAMIC
          type: string
        state:
          enum:
          - INITIALIZED
          - STOPPED
          - STARTED
          - CLOSED
          type: string
        properties:
          additionalProperties:
            type: string
          type: object
        provider:
          $ref: '#/components/schemas/DictionaryProviderEntity'
        trigger:
          $ref: '#/components/schemas/DictionaryTriggerEntity'
        created_at:
          format: int64
          type: integer
        updated_at:
          format: int64
          type: integer
        deployed_at:
          format: int64
          type: integer
      type: object
    DictionaryProviderEntity:
      example:
        configuration:
          integralNumber: true
          double: true
          valueNode: true
          bigInteger: true
          floatingPointNumber: true
          float: true
          nodeType: ARRAY
          textual: true
          int: true
          long: true
          missingNode: true
          pojo: true
          number: true
          boolean: true
          null: true
          array: true
          binary: true
          containerNode: true
          short: true
          bigDecimal: true
          object: true
        type: type
      properties:
        type:
          type: string
        configuration:
          $ref: '#/components/schemas/JsonNode'
      required:
      - configuration
      - type
      type: object
    DictionaryTriggerEntity:
      example:
        unit: NANOSECONDS
        rate: 0
      properties:
        rate:
          format: int64
          type: integer
        unit:
          enum:
          - NANOSECONDS
          - MICROSECONDS
          - MILLISECONDS
          - SECONDS
          - MINUTES
          - HOURS
          - DAYS
          type: string
      required:
      - rate
      - unit
      type: object
    JsonNode:
      example:
        integralNumber: true
        double: true
        valueNode: true
        bigInteger: true
        floatingPointNumber: true
        float: true
        nodeType: ARRAY
        textual: true
        int: true
        long: true
        missingNode: true
        pojo: true
        number: true
        boolean: true
        null: true
        array: true
        binary: true
        containerNode: true
        short: true
        bigDecimal: true
        object: true
      properties:
        float:
          type: boolean
        object:
          type: boolean
        double:
          type: boolean
        bigDecimal:
          type: boolean
        bigInteger:
          type: boolean
        textual:
          type: boolean
        boolean:
          type: boolean
        binary:
          type: boolean
        valueNode:
          type: boolean
        containerNode:
          type: boolean
        missingNode:
          type: boolean
        nodeType:
          enum:
          - ARRAY
          - BINARY
          - BOOLEAN
          - MISSING
          - "NULL"
          - NUMBER
          - OBJECT
          - POJO
          - STRING
          type: string
        pojo:
          type: boolean
        number:
          type: boolean
        integralNumber:
          type: boolean
        floatingPointNumber:
          type: boolean
        short:
          type: boolean
        int:
          type: boolean
        long:
          type: boolean
        array:
          type: boolean
        null:
          type: boolean
      type: object
    NewDictionaryEntity:
      example:
        provider:
          configuration:
            integralNumber: true
            double: true
            valueNode: true
            bigInteger: true
            floatingPointNumber: true
            float: true
            nodeType: ARRAY
            textual: true
            int: true
            long: true
            missingNode: true
            pojo: true
            number: true
            boolean: true
            null: true
            array: true
            binary: true
            containerNode: true
            short: true
            bigDecimal: true
            object: true
          type: type
        name: name
        description: description
        trigger:
          unit: NANOSECONDS
          rate: 0
        type: MANUAL
        properties:
          key: properties
      properties:
        name:
          maxLength: 2147483647
          minLength: 3
          type: string
        description:
          type: string
        type:
          enum:
          - MANUAL
          - DYNAMIC
          type: string
        provider:
          $ref: '#/components/schemas/DictionaryProviderEntity'
        trigger:
          $ref: '#/components/schemas/DictionaryTriggerEntity'
        properties:
          additionalProperties:
            type: string
          type: object
      required:
      - name
      - type
      type: object
    UpdateDictionaryEntity:
      example:
        provider:
          configuration:
            integralNumber: true
            double: true
            valueNode: true
            bigInteger: true
            floatingPointNumber: true
            float: true
            nodeType: ARRAY
            textual: true
            int: true
            long: true
            missingNode: true
            pojo: true
            number: true
            boolean: true
            null: true
            array: true
            binary: true
            containerNode: true
            short: true
            bigDecimal: true
            object: true
          type: type
        name: name
        description: description
        trigger:
          unit: NANOSECONDS
          rate: 0
        type: MANUAL
        properties:
          key: properties
      properties:
        name:
          type: string
        description:
          type: string
        type:
          enum:
          - MANUAL
          - DYNAMIC
          type: string
        properties:
          additionalProperties:
            type: string
          type: object
        provider:
          $ref: '#/components/schemas/DictionaryProviderEntity'
        trigger:
          $ref: '#/components/schemas/DictionaryTriggerEntity'
      required:
      - name
      - type
      type: object
    UpdateApiHeaderEntity:
      example:
        name: name
        id: id
        value: value
        order: 0
      properties:
        id:
          type: string
        name:
          type: string
        value:
          type: string
        order:
          format: int32
          type: integer
      type: object
    NewApiHeaderEntity:
      example:
        name: name
        value: value
      properties:
        name:
          type: string
        value:
          type: string
      type: object
    IdentityProviderListItem:
      example:
        updated_at: 6
        name: name
        description: description
        created_at: 0
        id: id
        type: GOOGLE
        enabled: true
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        enabled:
          type: boolean
        type:
          enum:
          - GOOGLE
          - GITHUB
          - GRAVITEEIO_AM
          - OIDC
          type: string
        created_at:
          format: int64
          type: integer
        updated_at:
          format: int64
          type: integer
      type: object
    GroupMappingEntity:
      example:
        condition: condition
        groups:
        - groups
        - groups
      properties:
        condition:
          type: string
        groups:
          items:
            type: string
          type: array
      type: object
    IdentityProviderEntity:
      example:
        userProfileMapping:
          key: userProfileMapping
        updated_at: 6
        configuration:
          key: '{}'
        name: name
        description: description
        roleMappings:
        - condition: condition
          management: management
          portal: portal
        - condition: condition
          management: management
          portal: portal
        created_at: 0
        id: id
        groupMappings:
        - condition: condition
          groups:
          - groups
          - groups
        - condition: condition
          groups:
          - groups
          - groups
        type: GOOGLE
        enabled: true
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        type:
          enum:
          - GOOGLE
          - GITHUB
          - GRAVITEEIO_AM
          - OIDC
          type: string
        enabled:
          type: boolean
        configuration:
          additionalProperties:
            properties: {}
            type: object
          type: object
        groupMappings:
          items:
            $ref: '#/components/schemas/GroupMappingEntity'
          type: array
        roleMappings:
          items:
            $ref: '#/components/schemas/RoleMappingEntity'
          type: array
        userProfileMapping:
          additionalProperties:
            type: string
          type: object
        created_at:
          format: int64
          type: integer
        updated_at:
          format: int64
          type: integer
      type: object
    RoleMappingEntity:
      example:
        condition: condition
        management: management
        portal: portal
      properties:
        condition:
          type: string
        portal:
          type: string
        management:
          type: string
      type: object
    NewIdentityProviderEntity:
      example:
        userProfileMapping:
          key: userProfileMapping
        configuration:
          key: '{}'
        name: name
        description: description
        type: GOOGLE
        enabled: true
      properties:
        name:
          maxLength: 2147483647
          minLength: 3
          type: string
        description:
          type: string
        type:
          enum:
          - GOOGLE
          - GITHUB
          - GRAVITEEIO_AM
          - OIDC
          type: string
        configuration:
          additionalProperties:
            properties: {}
            type: object
          type: object
        enabled:
          type: boolean
        userProfileMapping:
          additionalProperties:
            type: string
          type: object
      required:
      - configuration
      - name
      - type
      type: object
    UpdateIdentityProviderEntity:
      example:
        userProfileMapping:
          key: userProfileMapping
        configuration:
          key: '{}'
        name: name
        description: description
        roleMappings:
        - condition: condition
          management: management
          portal: portal
        - condition: condition
          management: management
          portal: portal
        groupMappings:
        - condition: condition
          groups:
          - groups
          - groups
        - condition: condition
          groups:
          - groups
          - groups
        enabled: true
      properties:
        name:
          type: string
        description:
          type: string
        configuration:
          additionalProperties:
            properties: {}
            type: object
          type: object
        enabled:
          type: boolean
        groupMappings:
          items:
            $ref: '#/components/schemas/GroupMappingEntity'
          type: array
        roleMappings:
          items:
            $ref: '#/components/schemas/RoleMappingEntity'
          type: array
        userProfileMapping:
          additionalProperties:
            type: string
          type: object
      required:
      - configuration
      - enabled
      - name
      type: object
    UpdateUserEntity:
      example:
        firstname: firstname
        picture: picture
        lastname: lastname
      properties:
        firstname:
          type: string
        lastname:
          type: string
        picture:
          type: string
      required:
      - picture
      type: object
    PagedResultPortalNotificationEntity:
      example:
        metadata:
          key:
            key: '{}'
        data:
        - created_at: 0
          id: id
          title: title
          message: message
        - created_at: 0
          id: id
          title: title
          message: message
        page:
          per_page: 1
          current: 0
          size: 6
          total_elements: 5
          total_pages: 5
      properties:
        data:
          items:
            $ref: '#/components/schemas/PortalNotificationEntity'
          type: array
        metadata:
          additionalProperties:
            additionalProperties:
              properties: {}
              type: object
            type: object
          type: object
        page:
          $ref: '#/components/schemas/Page'
      type: object
    PortalNotificationEntity:
      example:
        created_at: 0
        id: id
        title: title
        message: message
      properties:
        id:
          type: string
        title:
          type: string
        message:
          type: string
        created_at:
          format: int64
          type: integer
      type: object
    FetcherEntity:
      example:
        plugin:
          name: name
          description: description
          id: id
          version: version
        name: name
        description: description
        id: id
        version: version
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        version:
          type: string
        plugin:
          $ref: '#/components/schemas/PluginEntity'
      type: object
    PluginEntity:
      example:
        name: name
        description: description
        id: id
        version: version
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        version:
          type: string
      type: object
    FetcherListItem:
      example:
        schema: schema
        name: name
        description: description
        id: id
        version: version
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        version:
          type: string
        schema:
          type: string
      type: object
    InstanceListItem:
      example:
        ip: ip
        operating_system_name: operating_system_name
        version: version
        tags:
        - tags
        - tags
        hostname: hostname
        port: port
        started_at: 0
        id: id
        state: STARTED
        event: event
        stopped_at: 1
        last_heartbeat_at: 6
        tenant: tenant
      properties:
        event:
          type: string
        id:
          type: string
        hostname:
          type: string
        ip:
          type: string
        port:
          type: string
        version:
          type: string
        tags:
          items:
            type: string
          type: array
        tenant:
          type: string
        state:
          enum:
          - STARTED
          - UNKNOWN
          - STOPPED
          type: string
        started_at:
          format: int64
          type: integer
        last_heartbeat_at:
          format: int64
          type: integer
        stopped_at:
          format: int64
          type: integer
        operating_system_name:
          type: string
      type: object
    MonitoringCPU:
      example:
        percent_use: 0
        load_average:
          key: '{}'
      properties:
        percent_use:
          format: int32
          type: integer
        load_average:
          additionalProperties:
            properties: {}
            type: object
          type: object
      type: object
    MonitoringData:
      example:
        jvm:
          heap_committed_in_bytes: 9
          heap_used_percent: 7
          heap_max_in_bytes: 3
          old_pool_used_in_bytes: 5
          survivor_pool_max_in_bytes: 7
          survivor_pool_peak_max_in_bytes: 4
          uptime_in_millis: 5
          young_pool_used_in_bytes: 7
          survivor_pool_used_in_bytes: 6
          young_pool_peak_used_in_bytes: 1
          old_pool_peak_used_in_bytes: 9
          old_pool_peak_max_in_bytes: 6
          young_pool_peak_max_in_bytes: 1
          non_heap_committed_in_bytes: 4
          old_pool_max_in_bytes: 9
          survivor_pool_peak_used_in_bytes: 1
          heap_used_in_bytes: 2
          non_heap_used_in_bytes: 2
          young_pool_max_in_bytes: 1
          timestamp: 5
        process:
          open_file_descriptors: 6
          max_file_descriptors: 1
        cpu:
          percent_use: 0
          load_average:
            key: '{}'
        thread:
          count: 8
          peak_count: 9
        gc:
          young_collection_count: 6
          young_collection_time_in_millis: 3
          old_collection_count: 6
          old_collection_time_in_millis: 1
      properties:
        cpu:
          $ref: '#/components/schemas/MonitoringCPU'
        process:
          $ref: '#/components/schemas/MonitoringProcess'
        jvm:
          $ref: '#/components/schemas/MonitoringJVM'
        thread:
          $ref: '#/components/schemas/MonitoringThread'
        gc:
          $ref: '#/components/schemas/MonitoringGC'
      type: object
    MonitoringGC:
      example:
        young_collection_count: 6
        young_collection_time_in_millis: 3
        old_collection_count: 6
        old_collection_time_in_millis: 1
      properties:
        young_collection_count:
          format: int32
          type: integer
        young_collection_time_in_millis:
          format: int64
          type: integer
        old_collection_count:
          format: int32
          type: integer
        old_collection_time_in_millis:
          format: int64
          type: integer
      type: object
    MonitoringJVM:
      example:
        heap_committed_in_bytes: 9
        heap_used_percent: 7
        heap_max_in_bytes: 3
        old_pool_used_in_bytes: 5
        survivor_pool_max_in_bytes: 7
        survivor_pool_peak_max_in_bytes: 4
        uptime_in_millis: 5
        young_pool_used_in_bytes: 7
        survivor_pool_used_in_bytes: 6
        young_pool_peak_used_in_bytes: 1
        old_pool_peak_used_in_bytes: 9
        old_pool_peak_max_in_bytes: 6
        young_pool_peak_max_in_bytes: 1
        non_heap_committed_in_bytes: 4
        old_pool_max_in_bytes: 9
        survivor_pool_peak_used_in_bytes: 1
        heap_used_in_bytes: 2
        non_heap_used_in_bytes: 2
        young_pool_max_in_bytes: 1
        timestamp: 5
      properties:
        timestamp:
          format: int64
          type: integer
        uptime_in_millis:
          format: int64
          type: integer
        heap_used_in_bytes:
          format: int64
          type: integer
        heap_used_percent:
          format: int32
          type: integer
        heap_committed_in_bytes:
          format: int64
          type: integer
        heap_max_in_bytes:
          format: int64
          type: integer
        non_heap_used_in_bytes:
          format: int64
          type: integer
        non_heap_committed_in_bytes:
          format: int64
          type: integer
        young_pool_used_in_bytes:
          format: int64
          type: integer
        young_pool_max_in_bytes:
          format: int64
          type: integer
        young_pool_peak_used_in_bytes:
          format: int64
          type: integer
        young_pool_peak_max_in_bytes:
          format: int64
          type: integer
        survivor_pool_used_in_bytes:
          format: int64
          type: integer
        survivor_pool_max_in_bytes:
          format: int64
          type: integer
        survivor_pool_peak_used_in_bytes:
          format: int64
          type: integer
        survivor_pool_peak_max_in_bytes:
          format: int64
          type: integer
        old_pool_used_in_bytes:
          format: int64
          type: integer
        old_pool_max_in_bytes:
          format: int64
          type: integer
        old_pool_peak_used_in_bytes:
          format: int64
          type: integer
        old_pool_peak_max_in_bytes:
          format: int64
          type: integer
      type: object
    MonitoringProcess:
      example:
        open_file_descriptors: 6
        max_file_descriptors: 1
      properties:
        open_file_descriptors:
          format: int32
          type: integer
        max_file_descriptors:
          format: int32
          type: integer
      type: object
    MonitoringThread:
      example:
        count: 8
        peak_count: 9
      properties:
        count:
          format: int32
          type: integer
        peak_count:
          format: int32
          type: integer
      type: object
    InstanceEntity:
      example:
        plugins:
        - name: name
          description: description
          id: id
          version: version
        - name: name
          description: description
          id: id
          version: version
        ip: ip
        version: version
        tags:
        - tags
        - tags
        systemProperties:
          key: systemProperties
        hostname: hostname
        port: port
        started_at: 0
        id: id
        state: STARTED
        stopped_at: 1
        last_heartbeat_at: 6
        tenant: tenant
      properties:
        id:
          type: string
        hostname:
          type: string
        ip:
          type: string
        port:
          type: string
        tenant:
          type: string
        version:
          type: string
        tags:
          items:
            type: string
          type: array
        state:
          enum:
          - STARTED
          - UNKNOWN
          - STOPPED
          type: string
        systemProperties:
          additionalProperties:
            type: string
          type: object
        plugins:
          items:
            $ref: '#/components/schemas/PluginEntity'
          type: array
          uniqueItems: true
        started_at:
          format: int64
          type: integer
        last_heartbeat_at:
          format: int64
          type: integer
        stopped_at:
          format: int64
          type: integer
      type: object
    PageEventEntity:
      example:
        pageElements: 2
        pageNumber: 7
        content:
        - updated_at: 5
          payload: payload
          created_at: 5
          id: id
          type: PUBLISH_API
          user:
            sourceId: sourceId
            firstname: firstname
            password: password
            updated_at: 1
            roles:
            - permissions:
                key:
                - permissions
                - permissions
              scope: MANAGEMENT
              name: name
            - permissions:
                key:
                - permissions
                - permissions
              scope: MANAGEMENT
              name: name
            created_at: 6
            id: id
            source: source
            email: email
            picture: picture
            lastname: lastname
            lastConnectionAt: 0
          parentId: parentId
          properties:
            key: properties
        - updated_at: 5
          payload: payload
          created_at: 5
          id: id
          type: PUBLISH_API
          user:
            sourceId: sourceId
            firstname: firstname
            password: password
            updated_at: 1
            roles:
            - permissions:
                key:
                - permissions
                - permissions
              scope: MANAGEMENT
              name: name
            - permissions:
                key:
                - permissions
                - permissions
              scope: MANAGEMENT
              name: name
            created_at: 6
            id: id
            source: source
            email: email
            picture: picture
            lastname: lastname
            lastConnectionAt: 0
          parentId: parentId
          properties:
            key: properties
        totalElements: 9
      properties:
        content:
          items:
            $ref: '#/components/schemas/EventEntity'
          type: array
        pageElements:
          format: int64
          type: integer
        pageNumber:
          format: int32
          type: integer
        totalElements:
          format: int64
          type: integer
      type: object
    NewTicketEntity:
      example:
        application: application
        copyToSender: true
        subject: subject
        api: api
        content: content
      properties:
        subject:
          type: string
        content:
          type: string
        application:
          type: string
        api:
          type: string
        copyToSender:
          type: boolean
      required:
      - content
      - subject
      type: object
    PolicyListItem:
      example:
        schema: schema
        name: name
        description: description
        id: id
        type: REQUEST
        version: version
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        version:
          type: string
        type:
          enum:
          - REQUEST
          - RESPONSE
          - REQUEST_RESPONSE
          type: string
        schema:
          type: string
      type: object
    PolicyDevelopmentEntity:
      example:
        on_response_method: on_response_method
        configuration_class: configuration_class
        on_request_method: on_request_method
        class: class
      properties:
        class:
          type: string
        configuration_class:
          type: string
        on_request_method:
          type: string
        on_response_method:
          type: string
      type: object
    PolicyEntity:
      example:
        plugin:
          name: name
          description: description
          id: id
          version: version
        dev:
          on_response_method: on_response_method
          configuration_class: configuration_class
          on_request_method: on_request_method
          class: class
        name: name
        description: description
        id: id
        type: REQUEST
        version: version
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        version:
          type: string
        type:
          enum:
          - REQUEST
          - RESPONSE
          - REQUEST_RESPONSE
          type: string
        plugin:
          $ref: '#/components/schemas/PluginEntity'
        dev:
          $ref: '#/components/schemas/PolicyDevelopmentEntity'
      type: object
    ApiQualityMetrics:
      example:
        technicalDocumentationWeight: 5
        descriptionMinLength: 7
        logoWeight: 9
        functionalDocumentationWeight: 5
        descriptionWeight: 2
        healthcheckWeight: 4
        enabled: true
        viewsWeight: 3
        labelsWeight: 2
      properties:
        enabled:
          type: boolean
        functionalDocumentationWeight:
          format: int32
          type: integer
        technicalDocumentationWeight:
          format: int32
          type: integer
        descriptionWeight:
          format: int32
          type: integer
        descriptionMinLength:
          format: int32
          type: integer
        logoWeight:
          format: int32
          type: integer
        viewsWeight:
          format: int32
          type: integer
        labelsWeight:
          format: int32
          type: integer
        healthcheckWeight:
          format: int32
          type: integer
      type: object
    Authentication:
      example:
        github:
          clientId: clientId
        forceLogin:
          enabled: true
        localLogin:
          enabled: true
        google:
          clientId: clientId
        oauth2:
          clientId: clientId
          color: color
          userLogoutEndpoint: userLogoutEndpoint
          scope:
          - scope
          - scope
          name: name
          authorizationEndpoint: authorizationEndpoint
      properties:
        forceLogin:
          $ref: '#/components/schemas/Enabled'
        localLogin:
          $ref: '#/components/schemas/Enabled'
        google:
          $ref: '#/components/schemas/GoogleAuthentication'
        github:
          $ref: '#/components/schemas/GithubAuthentication'
        oauth2:
          $ref: '#/components/schemas/OAuth2Authentication'
      type: object
    Company:
      example:
        name: name
      properties:
        name:
          type: string
      type: object
    Documentation:
      example:
        url: url
      properties:
        url:
          type: string
      type: object
    Enabled:
      example:
        enabled: true
      properties:
        enabled:
          type: boolean
      type: object
    GithubAuthentication:
      example:
        clientId: clientId
      properties:
        clientId:
          type: string
      type: object
    GoogleAuthentication:
      example:
        clientId: clientId
      properties:
        clientId:
          type: string
      type: object
    Management:
      example:
        title: title
      properties:
        title:
          type: string
      type: object
    OAuth2Authentication:
      example:
        clientId: clientId
        color: color
        userLogoutEndpoint: userLogoutEndpoint
        scope:
        - scope
        - scope
        name: name
        authorizationEndpoint: authorizationEndpoint
      properties:
        clientId:
          type: string
        name:
          type: string
        color:
          type: string
        authorizationEndpoint:
          type: string
        userLogoutEndpoint:
          type: string
        scope:
          items:
            type: string
          type: array
      type: object
    PlanSecurity:
      properties:
        apikey:
          $ref: '#/components/schemas/Enabled'
        oauth2:
          $ref: '#/components/schemas/Enabled'
        keyless:
          $ref: '#/components/schemas/Enabled'
        jwt:
          $ref: '#/components/schemas/Enabled'
      type: object
    Portal:
      example:
        analytics:
          enabled: true
          trackingId: trackingId
        userCreation:
          enabled: true
        devMode:
          enabled: true
        apis:
          apiHeaderShowTags:
            enabled: true
          tilesMode:
            enabled: true
          viewMode:
            enabled: true
          apiHeaderShowViews:
            enabled: true
        uploadMedia:
          maxSizeInOctet: 0
          enabled: true
        entrypoint: entrypoint
        apikeyHeader: apikeyHeader
        rating:
          comment:
            mandatory: true
          enabled: true
        title: title
        support:
          enabled: true
        dashboard:
          widgets:
          - widgets
          - widgets
      properties:
        title:
          type: string
        entrypoint:
          type: string
        apikeyHeader:
          type: string
        support:
          $ref: '#/components/schemas/Enabled'
        devMode:
          $ref: '#/components/schemas/Enabled'
        userCreation:
          $ref: '#/components/schemas/Enabled'
        apis:
          $ref: '#/components/schemas/PortalApis'
        analytics:
          $ref: '#/components/schemas/PortalAnalytics'
        dashboard:
          $ref: '#/components/schemas/PortalDashboard'
        rating:
          $ref: '#/components/schemas/PortalRating'
        uploadMedia:
          $ref: '#/components/schemas/PortalUploadMedia'
      type: object
    PortalAnalytics:
      example:
        enabled: true
        trackingId: trackingId
      properties:
        enabled:
          type: boolean
        trackingId:
          type: string
      type: object
    PortalApis:
      example:
        apiHeaderShowTags:
          enabled: true
        tilesMode:
          enabled: true
        viewMode:
          enabled: true
        apiHeaderShowViews:
          enabled: true
      properties:
        tilesMode:
          $ref: '#/components/schemas/Enabled'
        viewMode:
          $ref: '#/components/schemas/Enabled'
        apiHeaderShowTags:
          $ref: '#/components/schemas/Enabled'
        apiHeaderShowViews:
          $ref: '#/components/schemas/Enabled'
      type: object
    PortalConfigEntity:
      example:
        scheduler:
          tasks: 6
          notifications: 1
        management:
          title: title
        documentation:
          url: url
        apiQualityMetrics:
          technicalDocumentationWeight: 5
          descriptionMinLength: 7
          logoWeight: 9
          functionalDocumentationWeight: 5
          descriptionWeight: 2
          healthcheckWeight: 4
          enabled: true
          viewsWeight: 3
          labelsWeight: 2
        company:
          name: name
        theme:
          css: css
          loader: loader
          name: name
          logo: logo
        portal:
          analytics:
            enabled: true
            trackingId: trackingId
          userCreation:
            enabled: true
          devMode:
            enabled: true
          apis:
            apiHeaderShowTags:
              enabled: true
            tilesMode:
              enabled: true
            viewMode:
              enabled: true
            apiHeaderShowViews:
              enabled: true
          uploadMedia:
            maxSizeInOctet: 0
            enabled: true
          entrypoint: entrypoint
          apikeyHeader: apikeyHeader
          rating:
            comment:
              mandatory: true
            enabled: true
          title: title
          support:
            enabled: true
          dashboard:
            widgets:
            - widgets
            - widgets
        plan:
          security: KEY_LESS
          name: name
          id: id
        authentication:
          github:
            clientId: clientId
          forceLogin:
            enabled: true
          localLogin:
            enabled: true
          google:
            clientId: clientId
          oauth2:
            clientId: clientId
            color: color
            userLogoutEndpoint: userLogoutEndpoint
            scope:
            - scope
            - scope
            name: name
            authorizationEndpoint: authorizationEndpoint
      properties:
        company:
          $ref: '#/components/schemas/Company'
        management:
          $ref: '#/components/schemas/Management'
        portal:
          $ref: '#/components/schemas/Portal'
        authentication:
          $ref: '#/components/schemas/Authentication'
        scheduler:
          $ref: '#/components/schemas/Scheduler'
        documentation:
          $ref: '#/components/schemas/Documentation'
        theme:
          $ref: '#/components/schemas/Theme'
        plan:
          $ref: '#/components/schemas/Plan'
        apiQualityMetrics:
          $ref: '#/components/schemas/ApiQualityMetrics'
      type: object
    PortalDashboard:
      example:
        widgets:
        - widgets
        - widgets
      properties:
        widgets:
          items:
            type: string
          type: array
      type: object
    PortalRating:
      example:
        comment:
          mandatory: true
        enabled: true
      properties:
        enabled:
          type: boolean
        comment:
          $ref: '#/components/schemas/RatingComment'
      type: object
    PortalUploadMedia:
      example:
        maxSizeInOctet: 0
        enabled: true
      properties:
        enabled:
          type: boolean
        maxSizeInOctet:
          format: int32
          type: integer
      type: object
    RatingComment:
      example:
        mandatory: true
      properties:
        mandatory:
          type: boolean
      type: object
    Scheduler:
      example:
        tasks: 6
        notifications: 1
      properties:
        tasks:
          format: int32
          type: integer
        notifications:
          format: int32
          type: integer
      type: object
    Theme:
      example:
        css: css
        loader: loader
        name: name
        logo: logo
      properties:
        name:
          type: string
        logo:
          type: string
        loader:
          type: string
        css:
          type: string
      type: object
    SocialIdentityProviderEntity:
      example:
        optionalUrlParams:
        - optionalUrlParams
        - optionalUrlParams
        clientId: clientId
        color: color
        tokenIntrospectionEndpoint: tokenIntrospectionEndpoint
        display: display
        icon: icon
        description: description
        requiredUrlParams:
        - requiredUrlParams
        - requiredUrlParams
        scopeDelimiter: scopeDelimiter
        type: GOOGLE
        authorizationEndpoint: authorizationEndpoint
        userLogoutEndpoint: userLogoutEndpoint
        name: name
        id: id
        scopes:
        - scopes
        - scopes
        state: state
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        clientId:
          type: string
        scopeDelimiter:
          type: string
        authorizationEndpoint:
          type: string
        tokenIntrospectionEndpoint:
          type: string
        userLogoutEndpoint:
          type: string
        requiredUrlParams:
          items:
            type: string
          type: array
        optionalUrlParams:
          items:
            type: string
          type: array
        scopes:
          items:
            type: string
          type: array
        display:
          type: string
        icon:
          type: string
        color:
          type: string
        state:
          type: string
        type:
          enum:
          - GOOGLE
          - GITHUB
          - GRAVITEEIO_AM
          - OIDC
          type: string
      type: object
    ResourceListItem:
      example:
        schema: schema
        name: name
        description: description
        id: id
        version: version
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        version:
          type: string
        schema:
          type: string
      type: object
    NewExternalUserEntity:
      example:
        sourceId: sourceId
        firstname: firstname
        source: source
        email: email
        picture: picture
        lastname: lastname
      properties:
        firstname:
          type: string
        lastname:
          type: string
        email:
          type: string
        source:
          type: string
        picture:
          type: string
        sourceId:
          type: string
      required:
      - email
      type: object
    UserGroupEntity:
      example:
        roles:
          key: roles
        name: name
        id: id
      properties:
        id:
          type: string
        name:
          type: string
        roles:
          additionalProperties:
            type: string
          type: object
      type: object
    UserMembership:
      example:
        reference: reference
        type: type
      properties:
        reference:
          type: string
        type:
          type: string
      type: object
    UserMembershipList:
      example:
        metadata:
          key:
            key: '{}'
        memberships:
        - reference: reference
          type: type
        - reference: reference
          type: type
      properties:
        memberships:
          items:
            $ref: '#/components/schemas/UserMembership'
          type: array
        metadata:
          additionalProperties:
            additionalProperties:
              properties: {}
              type: object
            type: object
          type: object
      type: object
    PagedResultUserEntity:
      properties:
        data:
          items:
            $ref: '#/components/schemas/UserEntity'
          type: array
        metadata:
          additionalProperties:
            additionalProperties:
              properties: {}
              type: object
            type: object
          type: object
        page:
          $ref: '#/components/schemas/Page'
      type: object
    RegisterUserEntity:
      example:
        password: password
        token: token
      properties:
        token:
          type: string
        password:
          type: string
      required:
      - password
      - token
      type: object
    Payload:
      example:
        redirectUri: redirectUri
        clientId: clientId
        code: code
        state: state
      properties:
        clientId:
          type: string
        redirectUri:
          type: string
        code:
          type: string
        state:
          type: string
      type: object
    SearchableUser:
      example:
        reference: reference
        firstname: firstname
        displayName: displayName
        id: id
        lastname: lastname
      properties:
        displayName:
          type: string
        reference:
          type: string
        firstname:
          type: string
        lastname:
          type: string
        id:
          type: string
      type: object
  securitySchemes:
    gravitee-auth:
      scheme: basic
      type: http
